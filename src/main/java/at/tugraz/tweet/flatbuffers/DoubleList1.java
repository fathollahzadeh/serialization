// automatically generated by the FlatBuffers compiler, do not modify

package at.tugraz.tweet.flatbuffers;

import java.nio.*;
import java.lang.*;

import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class DoubleList1 extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_2_0_8(); }
  public static DoubleList1 getRootAsDoubleList1(ByteBuffer _bb) { return getRootAsDoubleList1(_bb, new DoubleList1()); }
  public static DoubleList1 getRootAsDoubleList1(ByteBuffer _bb, DoubleList1 obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public DoubleList1 __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public DoubleList2 values(int j) { return values(new DoubleList2(), j); }
  public DoubleList2 values(DoubleList2 obj, int j) { int o = __offset(4); return o != 0 ? obj.__assign(__indirect(__vector(o) + j * 4), bb) : null; }
  public int valuesLength() { int o = __offset(4); return o != 0 ? __vector_len(o) : 0; }
  public DoubleList2.Vector valuesVector() { return valuesVector(new DoubleList2.Vector()); }
  public DoubleList2.Vector valuesVector(DoubleList2.Vector obj) { int o = __offset(4); return o != 0 ? obj.__assign(__vector(o), 4, bb) : null; }

  public static int createDoubleList1(FlatBufferBuilder builder,
      int valuesOffset) {
    builder.startTable(1);
    DoubleList1.addValues(builder, valuesOffset);
    return DoubleList1.endDoubleList1(builder);
  }

  public static void startDoubleList1(FlatBufferBuilder builder) { builder.startTable(1); }
  public static void addValues(FlatBufferBuilder builder, int valuesOffset) { builder.addOffset(0, valuesOffset, 0); }
  public static int createValuesVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startValuesVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static int endDoubleList1(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public DoubleList1 get(int j) { return get(new DoubleList1(), j); }
    public DoubleList1 get(DoubleList1 obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

