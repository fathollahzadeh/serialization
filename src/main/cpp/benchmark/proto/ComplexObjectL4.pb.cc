// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ComplexObjectL4.proto

#include "ComplexObjectL4.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace proto {
PROTOBUF_CONSTEXPR ComplexObjectL4::ComplexObjectL4(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.var_string1_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.complexobjectl41_)*/nullptr
  , /*decltype(_impl_.var_int641_)*/int64_t{0}
  , /*decltype(_impl_.var_int321_)*/0
  , /*decltype(_impl_.var_float1_)*/0
  , /*decltype(_impl_.var_double1_)*/0
  , /*decltype(_impl_.var_bool1_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ComplexObjectL4DefaultTypeInternal {
  PROTOBUF_CONSTEXPR ComplexObjectL4DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ComplexObjectL4DefaultTypeInternal() {}
  union {
    ComplexObjectL4 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ComplexObjectL4DefaultTypeInternal _ComplexObjectL4_default_instance_;
PROTOBUF_CONSTEXPR ComplexObjectL41::ComplexObjectL41(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.var_string1_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.complexobjectl42_)*/nullptr
  , /*decltype(_impl_.var_int641_)*/int64_t{0}
  , /*decltype(_impl_.var_int321_)*/0
  , /*decltype(_impl_.var_float1_)*/0
  , /*decltype(_impl_.var_double1_)*/0
  , /*decltype(_impl_.var_bool1_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ComplexObjectL41DefaultTypeInternal {
  PROTOBUF_CONSTEXPR ComplexObjectL41DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ComplexObjectL41DefaultTypeInternal() {}
  union {
    ComplexObjectL41 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ComplexObjectL41DefaultTypeInternal _ComplexObjectL41_default_instance_;
PROTOBUF_CONSTEXPR ComplexObjectL42::ComplexObjectL42(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.var_string1_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.complexobjectl43_)*/nullptr
  , /*decltype(_impl_.var_int641_)*/int64_t{0}
  , /*decltype(_impl_.var_int321_)*/0
  , /*decltype(_impl_.var_float1_)*/0
  , /*decltype(_impl_.var_double1_)*/0
  , /*decltype(_impl_.var_bool1_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ComplexObjectL42DefaultTypeInternal {
  PROTOBUF_CONSTEXPR ComplexObjectL42DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ComplexObjectL42DefaultTypeInternal() {}
  union {
    ComplexObjectL42 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ComplexObjectL42DefaultTypeInternal _ComplexObjectL42_default_instance_;
PROTOBUF_CONSTEXPR ComplexObjectL43::ComplexObjectL43(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.var_string1_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.complexobjectl44_)*/nullptr
  , /*decltype(_impl_.var_int641_)*/int64_t{0}
  , /*decltype(_impl_.var_int321_)*/0
  , /*decltype(_impl_.var_float1_)*/0
  , /*decltype(_impl_.var_double1_)*/0
  , /*decltype(_impl_.var_bool1_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ComplexObjectL43DefaultTypeInternal {
  PROTOBUF_CONSTEXPR ComplexObjectL43DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ComplexObjectL43DefaultTypeInternal() {}
  union {
    ComplexObjectL43 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ComplexObjectL43DefaultTypeInternal _ComplexObjectL43_default_instance_;
PROTOBUF_CONSTEXPR ComplexObjectL44::ComplexObjectL44(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.var_string1_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.complexobjectl45_)*/nullptr
  , /*decltype(_impl_.var_int641_)*/int64_t{0}
  , /*decltype(_impl_.var_int321_)*/0
  , /*decltype(_impl_.var_float1_)*/0
  , /*decltype(_impl_.var_double1_)*/0
  , /*decltype(_impl_.var_bool1_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ComplexObjectL44DefaultTypeInternal {
  PROTOBUF_CONSTEXPR ComplexObjectL44DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ComplexObjectL44DefaultTypeInternal() {}
  union {
    ComplexObjectL44 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ComplexObjectL44DefaultTypeInternal _ComplexObjectL44_default_instance_;
PROTOBUF_CONSTEXPR ComplexObjectL45::ComplexObjectL45(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.var_string1_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.complexobjectl46_)*/nullptr
  , /*decltype(_impl_.var_int641_)*/int64_t{0}
  , /*decltype(_impl_.var_int321_)*/0
  , /*decltype(_impl_.var_float1_)*/0
  , /*decltype(_impl_.var_double1_)*/0
  , /*decltype(_impl_.var_bool1_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ComplexObjectL45DefaultTypeInternal {
  PROTOBUF_CONSTEXPR ComplexObjectL45DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ComplexObjectL45DefaultTypeInternal() {}
  union {
    ComplexObjectL45 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ComplexObjectL45DefaultTypeInternal _ComplexObjectL45_default_instance_;
PROTOBUF_CONSTEXPR ComplexObjectL46::ComplexObjectL46(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.var_string1_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.complexobjectl47_)*/nullptr
  , /*decltype(_impl_.var_int641_)*/int64_t{0}
  , /*decltype(_impl_.var_int321_)*/0
  , /*decltype(_impl_.var_float1_)*/0
  , /*decltype(_impl_.var_double1_)*/0
  , /*decltype(_impl_.var_bool1_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ComplexObjectL46DefaultTypeInternal {
  PROTOBUF_CONSTEXPR ComplexObjectL46DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ComplexObjectL46DefaultTypeInternal() {}
  union {
    ComplexObjectL46 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ComplexObjectL46DefaultTypeInternal _ComplexObjectL46_default_instance_;
PROTOBUF_CONSTEXPR ComplexObjectL47::ComplexObjectL47(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.var_string1_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.complexobjectl48_)*/nullptr
  , /*decltype(_impl_.var_int641_)*/int64_t{0}
  , /*decltype(_impl_.var_int321_)*/0
  , /*decltype(_impl_.var_float1_)*/0
  , /*decltype(_impl_.var_double1_)*/0
  , /*decltype(_impl_.var_bool1_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ComplexObjectL47DefaultTypeInternal {
  PROTOBUF_CONSTEXPR ComplexObjectL47DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ComplexObjectL47DefaultTypeInternal() {}
  union {
    ComplexObjectL47 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ComplexObjectL47DefaultTypeInternal _ComplexObjectL47_default_instance_;
PROTOBUF_CONSTEXPR ComplexObjectL48::ComplexObjectL48(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.var_string1_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.complexobjectl49_)*/nullptr
  , /*decltype(_impl_.var_int641_)*/int64_t{0}
  , /*decltype(_impl_.var_int321_)*/0
  , /*decltype(_impl_.var_float1_)*/0
  , /*decltype(_impl_.var_double1_)*/0
  , /*decltype(_impl_.var_bool1_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ComplexObjectL48DefaultTypeInternal {
  PROTOBUF_CONSTEXPR ComplexObjectL48DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ComplexObjectL48DefaultTypeInternal() {}
  union {
    ComplexObjectL48 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ComplexObjectL48DefaultTypeInternal _ComplexObjectL48_default_instance_;
PROTOBUF_CONSTEXPR ComplexObjectL49::ComplexObjectL49(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.var_string1_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.complexobjectl410_)*/nullptr
  , /*decltype(_impl_.var_int641_)*/int64_t{0}
  , /*decltype(_impl_.var_int321_)*/0
  , /*decltype(_impl_.var_float1_)*/0
  , /*decltype(_impl_.var_double1_)*/0
  , /*decltype(_impl_.var_bool1_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ComplexObjectL49DefaultTypeInternal {
  PROTOBUF_CONSTEXPR ComplexObjectL49DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ComplexObjectL49DefaultTypeInternal() {}
  union {
    ComplexObjectL49 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ComplexObjectL49DefaultTypeInternal _ComplexObjectL49_default_instance_;
PROTOBUF_CONSTEXPR ComplexObjectL410::ComplexObjectL410(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.var_string1_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.complexobjectl411_)*/nullptr
  , /*decltype(_impl_.var_int641_)*/int64_t{0}
  , /*decltype(_impl_.var_int321_)*/0
  , /*decltype(_impl_.var_float1_)*/0
  , /*decltype(_impl_.var_double1_)*/0
  , /*decltype(_impl_.var_bool1_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ComplexObjectL410DefaultTypeInternal {
  PROTOBUF_CONSTEXPR ComplexObjectL410DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ComplexObjectL410DefaultTypeInternal() {}
  union {
    ComplexObjectL410 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ComplexObjectL410DefaultTypeInternal _ComplexObjectL410_default_instance_;
PROTOBUF_CONSTEXPR ComplexObjectL411::ComplexObjectL411(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.var_string1_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.complexobjectl412_)*/nullptr
  , /*decltype(_impl_.var_int641_)*/int64_t{0}
  , /*decltype(_impl_.var_int321_)*/0
  , /*decltype(_impl_.var_float1_)*/0
  , /*decltype(_impl_.var_double1_)*/0
  , /*decltype(_impl_.var_bool1_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ComplexObjectL411DefaultTypeInternal {
  PROTOBUF_CONSTEXPR ComplexObjectL411DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ComplexObjectL411DefaultTypeInternal() {}
  union {
    ComplexObjectL411 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ComplexObjectL411DefaultTypeInternal _ComplexObjectL411_default_instance_;
PROTOBUF_CONSTEXPR ComplexObjectL412::ComplexObjectL412(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.var_string1_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.complexobjectl413_)*/nullptr
  , /*decltype(_impl_.var_int641_)*/int64_t{0}
  , /*decltype(_impl_.var_int321_)*/0
  , /*decltype(_impl_.var_float1_)*/0
  , /*decltype(_impl_.var_double1_)*/0
  , /*decltype(_impl_.var_bool1_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ComplexObjectL412DefaultTypeInternal {
  PROTOBUF_CONSTEXPR ComplexObjectL412DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ComplexObjectL412DefaultTypeInternal() {}
  union {
    ComplexObjectL412 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ComplexObjectL412DefaultTypeInternal _ComplexObjectL412_default_instance_;
PROTOBUF_CONSTEXPR ComplexObjectL413::ComplexObjectL413(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.var_string1_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.complexobjectl414_)*/nullptr
  , /*decltype(_impl_.var_int641_)*/int64_t{0}
  , /*decltype(_impl_.var_int321_)*/0
  , /*decltype(_impl_.var_float1_)*/0
  , /*decltype(_impl_.var_double1_)*/0
  , /*decltype(_impl_.var_bool1_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ComplexObjectL413DefaultTypeInternal {
  PROTOBUF_CONSTEXPR ComplexObjectL413DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ComplexObjectL413DefaultTypeInternal() {}
  union {
    ComplexObjectL413 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ComplexObjectL413DefaultTypeInternal _ComplexObjectL413_default_instance_;
PROTOBUF_CONSTEXPR ComplexObjectL414::ComplexObjectL414(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.var_string1_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.complexobjectl415_)*/nullptr
  , /*decltype(_impl_.var_int641_)*/int64_t{0}
  , /*decltype(_impl_.var_int321_)*/0
  , /*decltype(_impl_.var_float1_)*/0
  , /*decltype(_impl_.var_double1_)*/0
  , /*decltype(_impl_.var_bool1_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ComplexObjectL414DefaultTypeInternal {
  PROTOBUF_CONSTEXPR ComplexObjectL414DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ComplexObjectL414DefaultTypeInternal() {}
  union {
    ComplexObjectL414 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ComplexObjectL414DefaultTypeInternal _ComplexObjectL414_default_instance_;
PROTOBUF_CONSTEXPR ComplexObjectL415::ComplexObjectL415(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.var_string1_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.var_int641_)*/int64_t{0}
  , /*decltype(_impl_.var_int321_)*/0
  , /*decltype(_impl_.var_float1_)*/0
  , /*decltype(_impl_.var_double1_)*/0
  , /*decltype(_impl_.var_bool1_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ComplexObjectL415DefaultTypeInternal {
  PROTOBUF_CONSTEXPR ComplexObjectL415DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ComplexObjectL415DefaultTypeInternal() {}
  union {
    ComplexObjectL415 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ComplexObjectL415DefaultTypeInternal _ComplexObjectL415_default_instance_;
}  // namespace proto
static ::_pb::Metadata file_level_metadata_ComplexObjectL4_2eproto[16];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_ComplexObjectL4_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_ComplexObjectL4_2eproto = nullptr;

const uint32_t TableStruct_ComplexObjectL4_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL4, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL4, _impl_.var_int321_),
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL4, _impl_.var_int641_),
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL4, _impl_.var_float1_),
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL4, _impl_.var_double1_),
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL4, _impl_.var_bool1_),
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL4, _impl_.var_string1_),
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL4, _impl_.complexobjectl41_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL41, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL41, _impl_.var_int321_),
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL41, _impl_.var_int641_),
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL41, _impl_.var_float1_),
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL41, _impl_.var_double1_),
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL41, _impl_.var_bool1_),
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL41, _impl_.var_string1_),
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL41, _impl_.complexobjectl42_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL42, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL42, _impl_.var_int321_),
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL42, _impl_.var_int641_),
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL42, _impl_.var_float1_),
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL42, _impl_.var_double1_),
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL42, _impl_.var_bool1_),
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL42, _impl_.var_string1_),
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL42, _impl_.complexobjectl43_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL43, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL43, _impl_.var_int321_),
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL43, _impl_.var_int641_),
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL43, _impl_.var_float1_),
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL43, _impl_.var_double1_),
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL43, _impl_.var_bool1_),
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL43, _impl_.var_string1_),
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL43, _impl_.complexobjectl44_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL44, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL44, _impl_.var_int321_),
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL44, _impl_.var_int641_),
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL44, _impl_.var_float1_),
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL44, _impl_.var_double1_),
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL44, _impl_.var_bool1_),
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL44, _impl_.var_string1_),
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL44, _impl_.complexobjectl45_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL45, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL45, _impl_.var_int321_),
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL45, _impl_.var_int641_),
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL45, _impl_.var_float1_),
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL45, _impl_.var_double1_),
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL45, _impl_.var_bool1_),
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL45, _impl_.var_string1_),
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL45, _impl_.complexobjectl46_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL46, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL46, _impl_.var_int321_),
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL46, _impl_.var_int641_),
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL46, _impl_.var_float1_),
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL46, _impl_.var_double1_),
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL46, _impl_.var_bool1_),
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL46, _impl_.var_string1_),
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL46, _impl_.complexobjectl47_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL47, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL47, _impl_.var_int321_),
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL47, _impl_.var_int641_),
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL47, _impl_.var_float1_),
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL47, _impl_.var_double1_),
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL47, _impl_.var_bool1_),
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL47, _impl_.var_string1_),
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL47, _impl_.complexobjectl48_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL48, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL48, _impl_.var_int321_),
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL48, _impl_.var_int641_),
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL48, _impl_.var_float1_),
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL48, _impl_.var_double1_),
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL48, _impl_.var_bool1_),
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL48, _impl_.var_string1_),
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL48, _impl_.complexobjectl49_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL49, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL49, _impl_.var_int321_),
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL49, _impl_.var_int641_),
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL49, _impl_.var_float1_),
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL49, _impl_.var_double1_),
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL49, _impl_.var_bool1_),
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL49, _impl_.var_string1_),
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL49, _impl_.complexobjectl410_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL410, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL410, _impl_.var_int321_),
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL410, _impl_.var_int641_),
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL410, _impl_.var_float1_),
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL410, _impl_.var_double1_),
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL410, _impl_.var_bool1_),
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL410, _impl_.var_string1_),
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL410, _impl_.complexobjectl411_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL411, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL411, _impl_.var_int321_),
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL411, _impl_.var_int641_),
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL411, _impl_.var_float1_),
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL411, _impl_.var_double1_),
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL411, _impl_.var_bool1_),
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL411, _impl_.var_string1_),
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL411, _impl_.complexobjectl412_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL412, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL412, _impl_.var_int321_),
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL412, _impl_.var_int641_),
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL412, _impl_.var_float1_),
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL412, _impl_.var_double1_),
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL412, _impl_.var_bool1_),
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL412, _impl_.var_string1_),
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL412, _impl_.complexobjectl413_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL413, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL413, _impl_.var_int321_),
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL413, _impl_.var_int641_),
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL413, _impl_.var_float1_),
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL413, _impl_.var_double1_),
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL413, _impl_.var_bool1_),
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL413, _impl_.var_string1_),
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL413, _impl_.complexobjectl414_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL414, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL414, _impl_.var_int321_),
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL414, _impl_.var_int641_),
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL414, _impl_.var_float1_),
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL414, _impl_.var_double1_),
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL414, _impl_.var_bool1_),
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL414, _impl_.var_string1_),
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL414, _impl_.complexobjectl415_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL415, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL415, _impl_.var_int321_),
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL415, _impl_.var_int641_),
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL415, _impl_.var_float1_),
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL415, _impl_.var_double1_),
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL415, _impl_.var_bool1_),
  PROTOBUF_FIELD_OFFSET(::proto::ComplexObjectL415, _impl_.var_string1_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::proto::ComplexObjectL4)},
  { 13, -1, -1, sizeof(::proto::ComplexObjectL41)},
  { 26, -1, -1, sizeof(::proto::ComplexObjectL42)},
  { 39, -1, -1, sizeof(::proto::ComplexObjectL43)},
  { 52, -1, -1, sizeof(::proto::ComplexObjectL44)},
  { 65, -1, -1, sizeof(::proto::ComplexObjectL45)},
  { 78, -1, -1, sizeof(::proto::ComplexObjectL46)},
  { 91, -1, -1, sizeof(::proto::ComplexObjectL47)},
  { 104, -1, -1, sizeof(::proto::ComplexObjectL48)},
  { 117, -1, -1, sizeof(::proto::ComplexObjectL49)},
  { 130, -1, -1, sizeof(::proto::ComplexObjectL410)},
  { 143, -1, -1, sizeof(::proto::ComplexObjectL411)},
  { 156, -1, -1, sizeof(::proto::ComplexObjectL412)},
  { 169, -1, -1, sizeof(::proto::ComplexObjectL413)},
  { 182, -1, -1, sizeof(::proto::ComplexObjectL414)},
  { 195, -1, -1, sizeof(::proto::ComplexObjectL415)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::proto::_ComplexObjectL4_default_instance_._instance,
  &::proto::_ComplexObjectL41_default_instance_._instance,
  &::proto::_ComplexObjectL42_default_instance_._instance,
  &::proto::_ComplexObjectL43_default_instance_._instance,
  &::proto::_ComplexObjectL44_default_instance_._instance,
  &::proto::_ComplexObjectL45_default_instance_._instance,
  &::proto::_ComplexObjectL46_default_instance_._instance,
  &::proto::_ComplexObjectL47_default_instance_._instance,
  &::proto::_ComplexObjectL48_default_instance_._instance,
  &::proto::_ComplexObjectL49_default_instance_._instance,
  &::proto::_ComplexObjectL410_default_instance_._instance,
  &::proto::_ComplexObjectL411_default_instance_._instance,
  &::proto::_ComplexObjectL412_default_instance_._instance,
  &::proto::_ComplexObjectL413_default_instance_._instance,
  &::proto::_ComplexObjectL414_default_instance_._instance,
  &::proto::_ComplexObjectL415_default_instance_._instance,
};

const char descriptor_table_protodef_ComplexObjectL4_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\025ComplexObjectL4.proto\022\005proto\"\275\001\n\017Compl"
  "exObjectL4\022\022\n\nvar_int321\030\001 \001(\005\022\022\n\nvar_in"
  "t641\030\002 \001(\003\022\022\n\nvar_float1\030\003 \001(\002\022\023\n\013var_do"
  "uble1\030\004 \001(\001\022\021\n\tvar_bool1\030\005 \001(\010\022\023\n\013var_st"
  "ring1\030\006 \001(\t\0221\n\020complexObjectL41\030\007 \001(\0132\027."
  "proto.ComplexObjectL41\"\276\001\n\020ComplexObject"
  "L41\022\022\n\nvar_int321\030\001 \001(\005\022\022\n\nvar_int641\030\002 "
  "\001(\003\022\022\n\nvar_float1\030\003 \001(\002\022\023\n\013var_double1\030\004"
  " \001(\001\022\021\n\tvar_bool1\030\005 \001(\010\022\023\n\013var_string1\030\006"
  " \001(\t\0221\n\020complexObjectL42\030\007 \001(\0132\027.proto.C"
  "omplexObjectL42\"\276\001\n\020ComplexObjectL42\022\022\n\n"
  "var_int321\030\001 \001(\005\022\022\n\nvar_int641\030\002 \001(\003\022\022\n\n"
  "var_float1\030\003 \001(\002\022\023\n\013var_double1\030\004 \001(\001\022\021\n"
  "\tvar_bool1\030\005 \001(\010\022\023\n\013var_string1\030\006 \001(\t\0221\n"
  "\020complexObjectL43\030\007 \001(\0132\027.proto.ComplexO"
  "bjectL43\"\276\001\n\020ComplexObjectL43\022\022\n\nvar_int"
  "321\030\001 \001(\005\022\022\n\nvar_int641\030\002 \001(\003\022\022\n\nvar_flo"
  "at1\030\003 \001(\002\022\023\n\013var_double1\030\004 \001(\001\022\021\n\tvar_bo"
  "ol1\030\005 \001(\010\022\023\n\013var_string1\030\006 \001(\t\0221\n\020comple"
  "xObjectL44\030\007 \001(\0132\027.proto.ComplexObjectL4"
  "4\"\276\001\n\020ComplexObjectL44\022\022\n\nvar_int321\030\001 \001"
  "(\005\022\022\n\nvar_int641\030\002 \001(\003\022\022\n\nvar_float1\030\003 \001"
  "(\002\022\023\n\013var_double1\030\004 \001(\001\022\021\n\tvar_bool1\030\005 \001"
  "(\010\022\023\n\013var_string1\030\006 \001(\t\0221\n\020complexObject"
  "L45\030\007 \001(\0132\027.proto.ComplexObjectL45\"\276\001\n\020C"
  "omplexObjectL45\022\022\n\nvar_int321\030\001 \001(\005\022\022\n\nv"
  "ar_int641\030\002 \001(\003\022\022\n\nvar_float1\030\003 \001(\002\022\023\n\013v"
  "ar_double1\030\004 \001(\001\022\021\n\tvar_bool1\030\005 \001(\010\022\023\n\013v"
  "ar_string1\030\006 \001(\t\0221\n\020complexObjectL46\030\007 \001"
  "(\0132\027.proto.ComplexObjectL46\"\276\001\n\020ComplexO"
  "bjectL46\022\022\n\nvar_int321\030\001 \001(\005\022\022\n\nvar_int6"
  "41\030\002 \001(\003\022\022\n\nvar_float1\030\003 \001(\002\022\023\n\013var_doub"
  "le1\030\004 \001(\001\022\021\n\tvar_bool1\030\005 \001(\010\022\023\n\013var_stri"
  "ng1\030\006 \001(\t\0221\n\020complexObjectL47\030\007 \001(\0132\027.pr"
  "oto.ComplexObjectL47\"\276\001\n\020ComplexObjectL4"
  "7\022\022\n\nvar_int321\030\001 \001(\005\022\022\n\nvar_int641\030\002 \001("
  "\003\022\022\n\nvar_float1\030\003 \001(\002\022\023\n\013var_double1\030\004 \001"
  "(\001\022\021\n\tvar_bool1\030\005 \001(\010\022\023\n\013var_string1\030\006 \001"
  "(\t\0221\n\020complexObjectL48\030\007 \001(\0132\027.proto.Com"
  "plexObjectL48\"\276\001\n\020ComplexObjectL48\022\022\n\nva"
  "r_int321\030\001 \001(\005\022\022\n\nvar_int641\030\002 \001(\003\022\022\n\nva"
  "r_float1\030\003 \001(\002\022\023\n\013var_double1\030\004 \001(\001\022\021\n\tv"
  "ar_bool1\030\005 \001(\010\022\023\n\013var_string1\030\006 \001(\t\0221\n\020c"
  "omplexObjectL49\030\007 \001(\0132\027.proto.ComplexObj"
  "ectL49\"\300\001\n\020ComplexObjectL49\022\022\n\nvar_int32"
  "1\030\001 \001(\005\022\022\n\nvar_int641\030\002 \001(\003\022\022\n\nvar_float"
  "1\030\003 \001(\002\022\023\n\013var_double1\030\004 \001(\001\022\021\n\tvar_bool"
  "1\030\005 \001(\010\022\023\n\013var_string1\030\006 \001(\t\0223\n\021complexO"
  "bjectL410\030\007 \001(\0132\030.proto.ComplexObjectL41"
  "0\"\301\001\n\021ComplexObjectL410\022\022\n\nvar_int321\030\001 "
  "\001(\005\022\022\n\nvar_int641\030\002 \001(\003\022\022\n\nvar_float1\030\003 "
  "\001(\002\022\023\n\013var_double1\030\004 \001(\001\022\021\n\tvar_bool1\030\005 "
  "\001(\010\022\023\n\013var_string1\030\006 \001(\t\0223\n\021complexObjec"
  "tL411\030\007 \001(\0132\030.proto.ComplexObjectL411\"\301\001"
  "\n\021ComplexObjectL411\022\022\n\nvar_int321\030\001 \001(\005\022"
  "\022\n\nvar_int641\030\002 \001(\003\022\022\n\nvar_float1\030\003 \001(\002\022"
  "\023\n\013var_double1\030\004 \001(\001\022\021\n\tvar_bool1\030\005 \001(\010\022"
  "\023\n\013var_string1\030\006 \001(\t\0223\n\021complexObjectL41"
  "2\030\007 \001(\0132\030.proto.ComplexObjectL412\"\301\001\n\021Co"
  "mplexObjectL412\022\022\n\nvar_int321\030\001 \001(\005\022\022\n\nv"
  "ar_int641\030\002 \001(\003\022\022\n\nvar_float1\030\003 \001(\002\022\023\n\013v"
  "ar_double1\030\004 \001(\001\022\021\n\tvar_bool1\030\005 \001(\010\022\023\n\013v"
  "ar_string1\030\006 \001(\t\0223\n\021complexObjectL413\030\007 "
  "\001(\0132\030.proto.ComplexObjectL413\"\301\001\n\021Comple"
  "xObjectL413\022\022\n\nvar_int321\030\001 \001(\005\022\022\n\nvar_i"
  "nt641\030\002 \001(\003\022\022\n\nvar_float1\030\003 \001(\002\022\023\n\013var_d"
  "ouble1\030\004 \001(\001\022\021\n\tvar_bool1\030\005 \001(\010\022\023\n\013var_s"
  "tring1\030\006 \001(\t\0223\n\021complexObjectL414\030\007 \001(\0132"
  "\030.proto.ComplexObjectL414\"\301\001\n\021ComplexObj"
  "ectL414\022\022\n\nvar_int321\030\001 \001(\005\022\022\n\nvar_int64"
  "1\030\002 \001(\003\022\022\n\nvar_float1\030\003 \001(\002\022\023\n\013var_doubl"
  "e1\030\004 \001(\001\022\021\n\tvar_bool1\030\005 \001(\010\022\023\n\013var_strin"
  "g1\030\006 \001(\t\0223\n\021complexObjectL415\030\007 \001(\0132\030.pr"
  "oto.ComplexObjectL415\"\214\001\n\021ComplexObjectL"
  "415\022\022\n\nvar_int321\030\001 \001(\005\022\022\n\nvar_int641\030\002 "
  "\001(\003\022\022\n\nvar_float1\030\003 \001(\002\022\023\n\013var_double1\030\004"
  " \001(\001\022\021\n\tvar_bool1\030\005 \001(\010\022\023\n\013var_string1\030\006"
  " \001(\tb\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_ComplexObjectL4_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_ComplexObjectL4_2eproto = {
    false, false, 3092, descriptor_table_protodef_ComplexObjectL4_2eproto,
    "ComplexObjectL4.proto",
    &descriptor_table_ComplexObjectL4_2eproto_once, nullptr, 0, 16,
    schemas, file_default_instances, TableStruct_ComplexObjectL4_2eproto::offsets,
    file_level_metadata_ComplexObjectL4_2eproto, file_level_enum_descriptors_ComplexObjectL4_2eproto,
    file_level_service_descriptors_ComplexObjectL4_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_ComplexObjectL4_2eproto_getter() {
  return &descriptor_table_ComplexObjectL4_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_ComplexObjectL4_2eproto(&descriptor_table_ComplexObjectL4_2eproto);
namespace proto {

// ===================================================================

class ComplexObjectL4::_Internal {
 public:
  static const ::proto::ComplexObjectL41& complexobjectl41(const ComplexObjectL4* msg);
};

const ::proto::ComplexObjectL41&
ComplexObjectL4::_Internal::complexobjectl41(const ComplexObjectL4* msg) {
  return *msg->_impl_.complexobjectl41_;
}
ComplexObjectL4::ComplexObjectL4(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.ComplexObjectL4)
}
ComplexObjectL4::ComplexObjectL4(const ComplexObjectL4& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ComplexObjectL4* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.var_string1_){}
    , decltype(_impl_.complexobjectl41_){nullptr}
    , decltype(_impl_.var_int641_){}
    , decltype(_impl_.var_int321_){}
    , decltype(_impl_.var_float1_){}
    , decltype(_impl_.var_double1_){}
    , decltype(_impl_.var_bool1_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.var_string1_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.var_string1_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_var_string1().empty()) {
    _this->_impl_.var_string1_.Set(from._internal_var_string1(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_complexobjectl41()) {
    _this->_impl_.complexobjectl41_ = new ::proto::ComplexObjectL41(*from._impl_.complexobjectl41_);
  }
  ::memcpy(&_impl_.var_int641_, &from._impl_.var_int641_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.var_bool1_) -
    reinterpret_cast<char*>(&_impl_.var_int641_)) + sizeof(_impl_.var_bool1_));
  // @@protoc_insertion_point(copy_constructor:proto.ComplexObjectL4)
}

inline void ComplexObjectL4::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.var_string1_){}
    , decltype(_impl_.complexobjectl41_){nullptr}
    , decltype(_impl_.var_int641_){int64_t{0}}
    , decltype(_impl_.var_int321_){0}
    , decltype(_impl_.var_float1_){0}
    , decltype(_impl_.var_double1_){0}
    , decltype(_impl_.var_bool1_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.var_string1_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.var_string1_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ComplexObjectL4::~ComplexObjectL4() {
  // @@protoc_insertion_point(destructor:proto.ComplexObjectL4)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ComplexObjectL4::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.var_string1_.Destroy();
  if (this != internal_default_instance()) delete _impl_.complexobjectl41_;
}

void ComplexObjectL4::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ComplexObjectL4::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ComplexObjectL4)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.var_string1_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.complexobjectl41_ != nullptr) {
    delete _impl_.complexobjectl41_;
  }
  _impl_.complexobjectl41_ = nullptr;
  ::memset(&_impl_.var_int641_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.var_bool1_) -
      reinterpret_cast<char*>(&_impl_.var_int641_)) + sizeof(_impl_.var_bool1_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ComplexObjectL4::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 var_int321 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.var_int321_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 var_int641 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.var_int641_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // float var_float1 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 29)) {
          _impl_.var_float1_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // double var_double1 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 33)) {
          _impl_.var_double1_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // bool var_bool1 = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.var_bool1_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string var_string1 = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_var_string1();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.ComplexObjectL4.var_string1"));
        } else
          goto handle_unusual;
        continue;
      // .proto.ComplexObjectL41 complexObjectL41 = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_complexobjectl41(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ComplexObjectL4::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.ComplexObjectL4)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 var_int321 = 1;
  if (this->_internal_var_int321() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_var_int321(), target);
  }

  // int64 var_int641 = 2;
  if (this->_internal_var_int641() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_var_int641(), target);
  }

  // float var_float1 = 3;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_var_float1 = this->_internal_var_float1();
  uint32_t raw_var_float1;
  memcpy(&raw_var_float1, &tmp_var_float1, sizeof(tmp_var_float1));
  if (raw_var_float1 != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(3, this->_internal_var_float1(), target);
  }

  // double var_double1 = 4;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_var_double1 = this->_internal_var_double1();
  uint64_t raw_var_double1;
  memcpy(&raw_var_double1, &tmp_var_double1, sizeof(tmp_var_double1));
  if (raw_var_double1 != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(4, this->_internal_var_double1(), target);
  }

  // bool var_bool1 = 5;
  if (this->_internal_var_bool1() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(5, this->_internal_var_bool1(), target);
  }

  // string var_string1 = 6;
  if (!this->_internal_var_string1().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_var_string1().data(), static_cast<int>(this->_internal_var_string1().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.ComplexObjectL4.var_string1");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_var_string1(), target);
  }

  // .proto.ComplexObjectL41 complexObjectL41 = 7;
  if (this->_internal_has_complexobjectl41()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::complexobjectl41(this),
        _Internal::complexobjectl41(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ComplexObjectL4)
  return target;
}

size_t ComplexObjectL4::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ComplexObjectL4)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string var_string1 = 6;
  if (!this->_internal_var_string1().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_var_string1());
  }

  // .proto.ComplexObjectL41 complexObjectL41 = 7;
  if (this->_internal_has_complexobjectl41()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.complexobjectl41_);
  }

  // int64 var_int641 = 2;
  if (this->_internal_var_int641() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_var_int641());
  }

  // int32 var_int321 = 1;
  if (this->_internal_var_int321() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_var_int321());
  }

  // float var_float1 = 3;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_var_float1 = this->_internal_var_float1();
  uint32_t raw_var_float1;
  memcpy(&raw_var_float1, &tmp_var_float1, sizeof(tmp_var_float1));
  if (raw_var_float1 != 0) {
    total_size += 1 + 4;
  }

  // double var_double1 = 4;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_var_double1 = this->_internal_var_double1();
  uint64_t raw_var_double1;
  memcpy(&raw_var_double1, &tmp_var_double1, sizeof(tmp_var_double1));
  if (raw_var_double1 != 0) {
    total_size += 1 + 8;
  }

  // bool var_bool1 = 5;
  if (this->_internal_var_bool1() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ComplexObjectL4::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ComplexObjectL4::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ComplexObjectL4::GetClassData() const { return &_class_data_; }


void ComplexObjectL4::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ComplexObjectL4*>(&to_msg);
  auto& from = static_cast<const ComplexObjectL4&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.ComplexObjectL4)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_var_string1().empty()) {
    _this->_internal_set_var_string1(from._internal_var_string1());
  }
  if (from._internal_has_complexobjectl41()) {
    _this->_internal_mutable_complexobjectl41()->::proto::ComplexObjectL41::MergeFrom(
        from._internal_complexobjectl41());
  }
  if (from._internal_var_int641() != 0) {
    _this->_internal_set_var_int641(from._internal_var_int641());
  }
  if (from._internal_var_int321() != 0) {
    _this->_internal_set_var_int321(from._internal_var_int321());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_var_float1 = from._internal_var_float1();
  uint32_t raw_var_float1;
  memcpy(&raw_var_float1, &tmp_var_float1, sizeof(tmp_var_float1));
  if (raw_var_float1 != 0) {
    _this->_internal_set_var_float1(from._internal_var_float1());
  }
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_var_double1 = from._internal_var_double1();
  uint64_t raw_var_double1;
  memcpy(&raw_var_double1, &tmp_var_double1, sizeof(tmp_var_double1));
  if (raw_var_double1 != 0) {
    _this->_internal_set_var_double1(from._internal_var_double1());
  }
  if (from._internal_var_bool1() != 0) {
    _this->_internal_set_var_bool1(from._internal_var_bool1());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ComplexObjectL4::CopyFrom(const ComplexObjectL4& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ComplexObjectL4)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ComplexObjectL4::IsInitialized() const {
  return true;
}

void ComplexObjectL4::InternalSwap(ComplexObjectL4* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.var_string1_, lhs_arena,
      &other->_impl_.var_string1_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ComplexObjectL4, _impl_.var_bool1_)
      + sizeof(ComplexObjectL4::_impl_.var_bool1_)
      - PROTOBUF_FIELD_OFFSET(ComplexObjectL4, _impl_.complexobjectl41_)>(
          reinterpret_cast<char*>(&_impl_.complexobjectl41_),
          reinterpret_cast<char*>(&other->_impl_.complexobjectl41_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ComplexObjectL4::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ComplexObjectL4_2eproto_getter, &descriptor_table_ComplexObjectL4_2eproto_once,
      file_level_metadata_ComplexObjectL4_2eproto[0]);
}

// ===================================================================

class ComplexObjectL41::_Internal {
 public:
  static const ::proto::ComplexObjectL42& complexobjectl42(const ComplexObjectL41* msg);
};

const ::proto::ComplexObjectL42&
ComplexObjectL41::_Internal::complexobjectl42(const ComplexObjectL41* msg) {
  return *msg->_impl_.complexobjectl42_;
}
ComplexObjectL41::ComplexObjectL41(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.ComplexObjectL41)
}
ComplexObjectL41::ComplexObjectL41(const ComplexObjectL41& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ComplexObjectL41* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.var_string1_){}
    , decltype(_impl_.complexobjectl42_){nullptr}
    , decltype(_impl_.var_int641_){}
    , decltype(_impl_.var_int321_){}
    , decltype(_impl_.var_float1_){}
    , decltype(_impl_.var_double1_){}
    , decltype(_impl_.var_bool1_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.var_string1_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.var_string1_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_var_string1().empty()) {
    _this->_impl_.var_string1_.Set(from._internal_var_string1(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_complexobjectl42()) {
    _this->_impl_.complexobjectl42_ = new ::proto::ComplexObjectL42(*from._impl_.complexobjectl42_);
  }
  ::memcpy(&_impl_.var_int641_, &from._impl_.var_int641_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.var_bool1_) -
    reinterpret_cast<char*>(&_impl_.var_int641_)) + sizeof(_impl_.var_bool1_));
  // @@protoc_insertion_point(copy_constructor:proto.ComplexObjectL41)
}

inline void ComplexObjectL41::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.var_string1_){}
    , decltype(_impl_.complexobjectl42_){nullptr}
    , decltype(_impl_.var_int641_){int64_t{0}}
    , decltype(_impl_.var_int321_){0}
    , decltype(_impl_.var_float1_){0}
    , decltype(_impl_.var_double1_){0}
    , decltype(_impl_.var_bool1_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.var_string1_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.var_string1_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ComplexObjectL41::~ComplexObjectL41() {
  // @@protoc_insertion_point(destructor:proto.ComplexObjectL41)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ComplexObjectL41::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.var_string1_.Destroy();
  if (this != internal_default_instance()) delete _impl_.complexobjectl42_;
}

void ComplexObjectL41::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ComplexObjectL41::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ComplexObjectL41)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.var_string1_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.complexobjectl42_ != nullptr) {
    delete _impl_.complexobjectl42_;
  }
  _impl_.complexobjectl42_ = nullptr;
  ::memset(&_impl_.var_int641_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.var_bool1_) -
      reinterpret_cast<char*>(&_impl_.var_int641_)) + sizeof(_impl_.var_bool1_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ComplexObjectL41::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 var_int321 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.var_int321_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 var_int641 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.var_int641_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // float var_float1 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 29)) {
          _impl_.var_float1_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // double var_double1 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 33)) {
          _impl_.var_double1_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // bool var_bool1 = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.var_bool1_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string var_string1 = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_var_string1();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.ComplexObjectL41.var_string1"));
        } else
          goto handle_unusual;
        continue;
      // .proto.ComplexObjectL42 complexObjectL42 = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_complexobjectl42(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ComplexObjectL41::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.ComplexObjectL41)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 var_int321 = 1;
  if (this->_internal_var_int321() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_var_int321(), target);
  }

  // int64 var_int641 = 2;
  if (this->_internal_var_int641() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_var_int641(), target);
  }

  // float var_float1 = 3;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_var_float1 = this->_internal_var_float1();
  uint32_t raw_var_float1;
  memcpy(&raw_var_float1, &tmp_var_float1, sizeof(tmp_var_float1));
  if (raw_var_float1 != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(3, this->_internal_var_float1(), target);
  }

  // double var_double1 = 4;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_var_double1 = this->_internal_var_double1();
  uint64_t raw_var_double1;
  memcpy(&raw_var_double1, &tmp_var_double1, sizeof(tmp_var_double1));
  if (raw_var_double1 != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(4, this->_internal_var_double1(), target);
  }

  // bool var_bool1 = 5;
  if (this->_internal_var_bool1() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(5, this->_internal_var_bool1(), target);
  }

  // string var_string1 = 6;
  if (!this->_internal_var_string1().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_var_string1().data(), static_cast<int>(this->_internal_var_string1().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.ComplexObjectL41.var_string1");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_var_string1(), target);
  }

  // .proto.ComplexObjectL42 complexObjectL42 = 7;
  if (this->_internal_has_complexobjectl42()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::complexobjectl42(this),
        _Internal::complexobjectl42(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ComplexObjectL41)
  return target;
}

size_t ComplexObjectL41::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ComplexObjectL41)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string var_string1 = 6;
  if (!this->_internal_var_string1().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_var_string1());
  }

  // .proto.ComplexObjectL42 complexObjectL42 = 7;
  if (this->_internal_has_complexobjectl42()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.complexobjectl42_);
  }

  // int64 var_int641 = 2;
  if (this->_internal_var_int641() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_var_int641());
  }

  // int32 var_int321 = 1;
  if (this->_internal_var_int321() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_var_int321());
  }

  // float var_float1 = 3;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_var_float1 = this->_internal_var_float1();
  uint32_t raw_var_float1;
  memcpy(&raw_var_float1, &tmp_var_float1, sizeof(tmp_var_float1));
  if (raw_var_float1 != 0) {
    total_size += 1 + 4;
  }

  // double var_double1 = 4;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_var_double1 = this->_internal_var_double1();
  uint64_t raw_var_double1;
  memcpy(&raw_var_double1, &tmp_var_double1, sizeof(tmp_var_double1));
  if (raw_var_double1 != 0) {
    total_size += 1 + 8;
  }

  // bool var_bool1 = 5;
  if (this->_internal_var_bool1() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ComplexObjectL41::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ComplexObjectL41::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ComplexObjectL41::GetClassData() const { return &_class_data_; }


void ComplexObjectL41::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ComplexObjectL41*>(&to_msg);
  auto& from = static_cast<const ComplexObjectL41&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.ComplexObjectL41)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_var_string1().empty()) {
    _this->_internal_set_var_string1(from._internal_var_string1());
  }
  if (from._internal_has_complexobjectl42()) {
    _this->_internal_mutable_complexobjectl42()->::proto::ComplexObjectL42::MergeFrom(
        from._internal_complexobjectl42());
  }
  if (from._internal_var_int641() != 0) {
    _this->_internal_set_var_int641(from._internal_var_int641());
  }
  if (from._internal_var_int321() != 0) {
    _this->_internal_set_var_int321(from._internal_var_int321());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_var_float1 = from._internal_var_float1();
  uint32_t raw_var_float1;
  memcpy(&raw_var_float1, &tmp_var_float1, sizeof(tmp_var_float1));
  if (raw_var_float1 != 0) {
    _this->_internal_set_var_float1(from._internal_var_float1());
  }
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_var_double1 = from._internal_var_double1();
  uint64_t raw_var_double1;
  memcpy(&raw_var_double1, &tmp_var_double1, sizeof(tmp_var_double1));
  if (raw_var_double1 != 0) {
    _this->_internal_set_var_double1(from._internal_var_double1());
  }
  if (from._internal_var_bool1() != 0) {
    _this->_internal_set_var_bool1(from._internal_var_bool1());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ComplexObjectL41::CopyFrom(const ComplexObjectL41& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ComplexObjectL41)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ComplexObjectL41::IsInitialized() const {
  return true;
}

void ComplexObjectL41::InternalSwap(ComplexObjectL41* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.var_string1_, lhs_arena,
      &other->_impl_.var_string1_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ComplexObjectL41, _impl_.var_bool1_)
      + sizeof(ComplexObjectL41::_impl_.var_bool1_)
      - PROTOBUF_FIELD_OFFSET(ComplexObjectL41, _impl_.complexobjectl42_)>(
          reinterpret_cast<char*>(&_impl_.complexobjectl42_),
          reinterpret_cast<char*>(&other->_impl_.complexobjectl42_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ComplexObjectL41::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ComplexObjectL4_2eproto_getter, &descriptor_table_ComplexObjectL4_2eproto_once,
      file_level_metadata_ComplexObjectL4_2eproto[1]);
}

// ===================================================================

class ComplexObjectL42::_Internal {
 public:
  static const ::proto::ComplexObjectL43& complexobjectl43(const ComplexObjectL42* msg);
};

const ::proto::ComplexObjectL43&
ComplexObjectL42::_Internal::complexobjectl43(const ComplexObjectL42* msg) {
  return *msg->_impl_.complexobjectl43_;
}
ComplexObjectL42::ComplexObjectL42(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.ComplexObjectL42)
}
ComplexObjectL42::ComplexObjectL42(const ComplexObjectL42& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ComplexObjectL42* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.var_string1_){}
    , decltype(_impl_.complexobjectl43_){nullptr}
    , decltype(_impl_.var_int641_){}
    , decltype(_impl_.var_int321_){}
    , decltype(_impl_.var_float1_){}
    , decltype(_impl_.var_double1_){}
    , decltype(_impl_.var_bool1_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.var_string1_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.var_string1_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_var_string1().empty()) {
    _this->_impl_.var_string1_.Set(from._internal_var_string1(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_complexobjectl43()) {
    _this->_impl_.complexobjectl43_ = new ::proto::ComplexObjectL43(*from._impl_.complexobjectl43_);
  }
  ::memcpy(&_impl_.var_int641_, &from._impl_.var_int641_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.var_bool1_) -
    reinterpret_cast<char*>(&_impl_.var_int641_)) + sizeof(_impl_.var_bool1_));
  // @@protoc_insertion_point(copy_constructor:proto.ComplexObjectL42)
}

inline void ComplexObjectL42::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.var_string1_){}
    , decltype(_impl_.complexobjectl43_){nullptr}
    , decltype(_impl_.var_int641_){int64_t{0}}
    , decltype(_impl_.var_int321_){0}
    , decltype(_impl_.var_float1_){0}
    , decltype(_impl_.var_double1_){0}
    , decltype(_impl_.var_bool1_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.var_string1_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.var_string1_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ComplexObjectL42::~ComplexObjectL42() {
  // @@protoc_insertion_point(destructor:proto.ComplexObjectL42)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ComplexObjectL42::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.var_string1_.Destroy();
  if (this != internal_default_instance()) delete _impl_.complexobjectl43_;
}

void ComplexObjectL42::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ComplexObjectL42::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ComplexObjectL42)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.var_string1_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.complexobjectl43_ != nullptr) {
    delete _impl_.complexobjectl43_;
  }
  _impl_.complexobjectl43_ = nullptr;
  ::memset(&_impl_.var_int641_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.var_bool1_) -
      reinterpret_cast<char*>(&_impl_.var_int641_)) + sizeof(_impl_.var_bool1_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ComplexObjectL42::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 var_int321 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.var_int321_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 var_int641 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.var_int641_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // float var_float1 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 29)) {
          _impl_.var_float1_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // double var_double1 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 33)) {
          _impl_.var_double1_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // bool var_bool1 = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.var_bool1_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string var_string1 = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_var_string1();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.ComplexObjectL42.var_string1"));
        } else
          goto handle_unusual;
        continue;
      // .proto.ComplexObjectL43 complexObjectL43 = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_complexobjectl43(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ComplexObjectL42::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.ComplexObjectL42)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 var_int321 = 1;
  if (this->_internal_var_int321() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_var_int321(), target);
  }

  // int64 var_int641 = 2;
  if (this->_internal_var_int641() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_var_int641(), target);
  }

  // float var_float1 = 3;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_var_float1 = this->_internal_var_float1();
  uint32_t raw_var_float1;
  memcpy(&raw_var_float1, &tmp_var_float1, sizeof(tmp_var_float1));
  if (raw_var_float1 != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(3, this->_internal_var_float1(), target);
  }

  // double var_double1 = 4;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_var_double1 = this->_internal_var_double1();
  uint64_t raw_var_double1;
  memcpy(&raw_var_double1, &tmp_var_double1, sizeof(tmp_var_double1));
  if (raw_var_double1 != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(4, this->_internal_var_double1(), target);
  }

  // bool var_bool1 = 5;
  if (this->_internal_var_bool1() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(5, this->_internal_var_bool1(), target);
  }

  // string var_string1 = 6;
  if (!this->_internal_var_string1().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_var_string1().data(), static_cast<int>(this->_internal_var_string1().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.ComplexObjectL42.var_string1");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_var_string1(), target);
  }

  // .proto.ComplexObjectL43 complexObjectL43 = 7;
  if (this->_internal_has_complexobjectl43()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::complexobjectl43(this),
        _Internal::complexobjectl43(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ComplexObjectL42)
  return target;
}

size_t ComplexObjectL42::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ComplexObjectL42)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string var_string1 = 6;
  if (!this->_internal_var_string1().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_var_string1());
  }

  // .proto.ComplexObjectL43 complexObjectL43 = 7;
  if (this->_internal_has_complexobjectl43()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.complexobjectl43_);
  }

  // int64 var_int641 = 2;
  if (this->_internal_var_int641() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_var_int641());
  }

  // int32 var_int321 = 1;
  if (this->_internal_var_int321() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_var_int321());
  }

  // float var_float1 = 3;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_var_float1 = this->_internal_var_float1();
  uint32_t raw_var_float1;
  memcpy(&raw_var_float1, &tmp_var_float1, sizeof(tmp_var_float1));
  if (raw_var_float1 != 0) {
    total_size += 1 + 4;
  }

  // double var_double1 = 4;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_var_double1 = this->_internal_var_double1();
  uint64_t raw_var_double1;
  memcpy(&raw_var_double1, &tmp_var_double1, sizeof(tmp_var_double1));
  if (raw_var_double1 != 0) {
    total_size += 1 + 8;
  }

  // bool var_bool1 = 5;
  if (this->_internal_var_bool1() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ComplexObjectL42::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ComplexObjectL42::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ComplexObjectL42::GetClassData() const { return &_class_data_; }


void ComplexObjectL42::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ComplexObjectL42*>(&to_msg);
  auto& from = static_cast<const ComplexObjectL42&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.ComplexObjectL42)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_var_string1().empty()) {
    _this->_internal_set_var_string1(from._internal_var_string1());
  }
  if (from._internal_has_complexobjectl43()) {
    _this->_internal_mutable_complexobjectl43()->::proto::ComplexObjectL43::MergeFrom(
        from._internal_complexobjectl43());
  }
  if (from._internal_var_int641() != 0) {
    _this->_internal_set_var_int641(from._internal_var_int641());
  }
  if (from._internal_var_int321() != 0) {
    _this->_internal_set_var_int321(from._internal_var_int321());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_var_float1 = from._internal_var_float1();
  uint32_t raw_var_float1;
  memcpy(&raw_var_float1, &tmp_var_float1, sizeof(tmp_var_float1));
  if (raw_var_float1 != 0) {
    _this->_internal_set_var_float1(from._internal_var_float1());
  }
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_var_double1 = from._internal_var_double1();
  uint64_t raw_var_double1;
  memcpy(&raw_var_double1, &tmp_var_double1, sizeof(tmp_var_double1));
  if (raw_var_double1 != 0) {
    _this->_internal_set_var_double1(from._internal_var_double1());
  }
  if (from._internal_var_bool1() != 0) {
    _this->_internal_set_var_bool1(from._internal_var_bool1());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ComplexObjectL42::CopyFrom(const ComplexObjectL42& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ComplexObjectL42)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ComplexObjectL42::IsInitialized() const {
  return true;
}

void ComplexObjectL42::InternalSwap(ComplexObjectL42* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.var_string1_, lhs_arena,
      &other->_impl_.var_string1_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ComplexObjectL42, _impl_.var_bool1_)
      + sizeof(ComplexObjectL42::_impl_.var_bool1_)
      - PROTOBUF_FIELD_OFFSET(ComplexObjectL42, _impl_.complexobjectl43_)>(
          reinterpret_cast<char*>(&_impl_.complexobjectl43_),
          reinterpret_cast<char*>(&other->_impl_.complexobjectl43_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ComplexObjectL42::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ComplexObjectL4_2eproto_getter, &descriptor_table_ComplexObjectL4_2eproto_once,
      file_level_metadata_ComplexObjectL4_2eproto[2]);
}

// ===================================================================

class ComplexObjectL43::_Internal {
 public:
  static const ::proto::ComplexObjectL44& complexobjectl44(const ComplexObjectL43* msg);
};

const ::proto::ComplexObjectL44&
ComplexObjectL43::_Internal::complexobjectl44(const ComplexObjectL43* msg) {
  return *msg->_impl_.complexobjectl44_;
}
ComplexObjectL43::ComplexObjectL43(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.ComplexObjectL43)
}
ComplexObjectL43::ComplexObjectL43(const ComplexObjectL43& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ComplexObjectL43* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.var_string1_){}
    , decltype(_impl_.complexobjectl44_){nullptr}
    , decltype(_impl_.var_int641_){}
    , decltype(_impl_.var_int321_){}
    , decltype(_impl_.var_float1_){}
    , decltype(_impl_.var_double1_){}
    , decltype(_impl_.var_bool1_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.var_string1_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.var_string1_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_var_string1().empty()) {
    _this->_impl_.var_string1_.Set(from._internal_var_string1(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_complexobjectl44()) {
    _this->_impl_.complexobjectl44_ = new ::proto::ComplexObjectL44(*from._impl_.complexobjectl44_);
  }
  ::memcpy(&_impl_.var_int641_, &from._impl_.var_int641_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.var_bool1_) -
    reinterpret_cast<char*>(&_impl_.var_int641_)) + sizeof(_impl_.var_bool1_));
  // @@protoc_insertion_point(copy_constructor:proto.ComplexObjectL43)
}

inline void ComplexObjectL43::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.var_string1_){}
    , decltype(_impl_.complexobjectl44_){nullptr}
    , decltype(_impl_.var_int641_){int64_t{0}}
    , decltype(_impl_.var_int321_){0}
    , decltype(_impl_.var_float1_){0}
    , decltype(_impl_.var_double1_){0}
    , decltype(_impl_.var_bool1_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.var_string1_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.var_string1_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ComplexObjectL43::~ComplexObjectL43() {
  // @@protoc_insertion_point(destructor:proto.ComplexObjectL43)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ComplexObjectL43::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.var_string1_.Destroy();
  if (this != internal_default_instance()) delete _impl_.complexobjectl44_;
}

void ComplexObjectL43::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ComplexObjectL43::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ComplexObjectL43)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.var_string1_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.complexobjectl44_ != nullptr) {
    delete _impl_.complexobjectl44_;
  }
  _impl_.complexobjectl44_ = nullptr;
  ::memset(&_impl_.var_int641_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.var_bool1_) -
      reinterpret_cast<char*>(&_impl_.var_int641_)) + sizeof(_impl_.var_bool1_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ComplexObjectL43::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 var_int321 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.var_int321_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 var_int641 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.var_int641_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // float var_float1 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 29)) {
          _impl_.var_float1_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // double var_double1 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 33)) {
          _impl_.var_double1_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // bool var_bool1 = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.var_bool1_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string var_string1 = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_var_string1();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.ComplexObjectL43.var_string1"));
        } else
          goto handle_unusual;
        continue;
      // .proto.ComplexObjectL44 complexObjectL44 = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_complexobjectl44(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ComplexObjectL43::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.ComplexObjectL43)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 var_int321 = 1;
  if (this->_internal_var_int321() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_var_int321(), target);
  }

  // int64 var_int641 = 2;
  if (this->_internal_var_int641() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_var_int641(), target);
  }

  // float var_float1 = 3;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_var_float1 = this->_internal_var_float1();
  uint32_t raw_var_float1;
  memcpy(&raw_var_float1, &tmp_var_float1, sizeof(tmp_var_float1));
  if (raw_var_float1 != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(3, this->_internal_var_float1(), target);
  }

  // double var_double1 = 4;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_var_double1 = this->_internal_var_double1();
  uint64_t raw_var_double1;
  memcpy(&raw_var_double1, &tmp_var_double1, sizeof(tmp_var_double1));
  if (raw_var_double1 != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(4, this->_internal_var_double1(), target);
  }

  // bool var_bool1 = 5;
  if (this->_internal_var_bool1() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(5, this->_internal_var_bool1(), target);
  }

  // string var_string1 = 6;
  if (!this->_internal_var_string1().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_var_string1().data(), static_cast<int>(this->_internal_var_string1().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.ComplexObjectL43.var_string1");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_var_string1(), target);
  }

  // .proto.ComplexObjectL44 complexObjectL44 = 7;
  if (this->_internal_has_complexobjectl44()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::complexobjectl44(this),
        _Internal::complexobjectl44(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ComplexObjectL43)
  return target;
}

size_t ComplexObjectL43::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ComplexObjectL43)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string var_string1 = 6;
  if (!this->_internal_var_string1().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_var_string1());
  }

  // .proto.ComplexObjectL44 complexObjectL44 = 7;
  if (this->_internal_has_complexobjectl44()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.complexobjectl44_);
  }

  // int64 var_int641 = 2;
  if (this->_internal_var_int641() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_var_int641());
  }

  // int32 var_int321 = 1;
  if (this->_internal_var_int321() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_var_int321());
  }

  // float var_float1 = 3;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_var_float1 = this->_internal_var_float1();
  uint32_t raw_var_float1;
  memcpy(&raw_var_float1, &tmp_var_float1, sizeof(tmp_var_float1));
  if (raw_var_float1 != 0) {
    total_size += 1 + 4;
  }

  // double var_double1 = 4;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_var_double1 = this->_internal_var_double1();
  uint64_t raw_var_double1;
  memcpy(&raw_var_double1, &tmp_var_double1, sizeof(tmp_var_double1));
  if (raw_var_double1 != 0) {
    total_size += 1 + 8;
  }

  // bool var_bool1 = 5;
  if (this->_internal_var_bool1() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ComplexObjectL43::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ComplexObjectL43::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ComplexObjectL43::GetClassData() const { return &_class_data_; }


void ComplexObjectL43::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ComplexObjectL43*>(&to_msg);
  auto& from = static_cast<const ComplexObjectL43&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.ComplexObjectL43)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_var_string1().empty()) {
    _this->_internal_set_var_string1(from._internal_var_string1());
  }
  if (from._internal_has_complexobjectl44()) {
    _this->_internal_mutable_complexobjectl44()->::proto::ComplexObjectL44::MergeFrom(
        from._internal_complexobjectl44());
  }
  if (from._internal_var_int641() != 0) {
    _this->_internal_set_var_int641(from._internal_var_int641());
  }
  if (from._internal_var_int321() != 0) {
    _this->_internal_set_var_int321(from._internal_var_int321());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_var_float1 = from._internal_var_float1();
  uint32_t raw_var_float1;
  memcpy(&raw_var_float1, &tmp_var_float1, sizeof(tmp_var_float1));
  if (raw_var_float1 != 0) {
    _this->_internal_set_var_float1(from._internal_var_float1());
  }
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_var_double1 = from._internal_var_double1();
  uint64_t raw_var_double1;
  memcpy(&raw_var_double1, &tmp_var_double1, sizeof(tmp_var_double1));
  if (raw_var_double1 != 0) {
    _this->_internal_set_var_double1(from._internal_var_double1());
  }
  if (from._internal_var_bool1() != 0) {
    _this->_internal_set_var_bool1(from._internal_var_bool1());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ComplexObjectL43::CopyFrom(const ComplexObjectL43& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ComplexObjectL43)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ComplexObjectL43::IsInitialized() const {
  return true;
}

void ComplexObjectL43::InternalSwap(ComplexObjectL43* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.var_string1_, lhs_arena,
      &other->_impl_.var_string1_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ComplexObjectL43, _impl_.var_bool1_)
      + sizeof(ComplexObjectL43::_impl_.var_bool1_)
      - PROTOBUF_FIELD_OFFSET(ComplexObjectL43, _impl_.complexobjectl44_)>(
          reinterpret_cast<char*>(&_impl_.complexobjectl44_),
          reinterpret_cast<char*>(&other->_impl_.complexobjectl44_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ComplexObjectL43::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ComplexObjectL4_2eproto_getter, &descriptor_table_ComplexObjectL4_2eproto_once,
      file_level_metadata_ComplexObjectL4_2eproto[3]);
}

// ===================================================================

class ComplexObjectL44::_Internal {
 public:
  static const ::proto::ComplexObjectL45& complexobjectl45(const ComplexObjectL44* msg);
};

const ::proto::ComplexObjectL45&
ComplexObjectL44::_Internal::complexobjectl45(const ComplexObjectL44* msg) {
  return *msg->_impl_.complexobjectl45_;
}
ComplexObjectL44::ComplexObjectL44(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.ComplexObjectL44)
}
ComplexObjectL44::ComplexObjectL44(const ComplexObjectL44& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ComplexObjectL44* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.var_string1_){}
    , decltype(_impl_.complexobjectl45_){nullptr}
    , decltype(_impl_.var_int641_){}
    , decltype(_impl_.var_int321_){}
    , decltype(_impl_.var_float1_){}
    , decltype(_impl_.var_double1_){}
    , decltype(_impl_.var_bool1_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.var_string1_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.var_string1_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_var_string1().empty()) {
    _this->_impl_.var_string1_.Set(from._internal_var_string1(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_complexobjectl45()) {
    _this->_impl_.complexobjectl45_ = new ::proto::ComplexObjectL45(*from._impl_.complexobjectl45_);
  }
  ::memcpy(&_impl_.var_int641_, &from._impl_.var_int641_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.var_bool1_) -
    reinterpret_cast<char*>(&_impl_.var_int641_)) + sizeof(_impl_.var_bool1_));
  // @@protoc_insertion_point(copy_constructor:proto.ComplexObjectL44)
}

inline void ComplexObjectL44::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.var_string1_){}
    , decltype(_impl_.complexobjectl45_){nullptr}
    , decltype(_impl_.var_int641_){int64_t{0}}
    , decltype(_impl_.var_int321_){0}
    , decltype(_impl_.var_float1_){0}
    , decltype(_impl_.var_double1_){0}
    , decltype(_impl_.var_bool1_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.var_string1_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.var_string1_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ComplexObjectL44::~ComplexObjectL44() {
  // @@protoc_insertion_point(destructor:proto.ComplexObjectL44)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ComplexObjectL44::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.var_string1_.Destroy();
  if (this != internal_default_instance()) delete _impl_.complexobjectl45_;
}

void ComplexObjectL44::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ComplexObjectL44::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ComplexObjectL44)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.var_string1_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.complexobjectl45_ != nullptr) {
    delete _impl_.complexobjectl45_;
  }
  _impl_.complexobjectl45_ = nullptr;
  ::memset(&_impl_.var_int641_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.var_bool1_) -
      reinterpret_cast<char*>(&_impl_.var_int641_)) + sizeof(_impl_.var_bool1_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ComplexObjectL44::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 var_int321 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.var_int321_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 var_int641 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.var_int641_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // float var_float1 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 29)) {
          _impl_.var_float1_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // double var_double1 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 33)) {
          _impl_.var_double1_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // bool var_bool1 = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.var_bool1_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string var_string1 = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_var_string1();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.ComplexObjectL44.var_string1"));
        } else
          goto handle_unusual;
        continue;
      // .proto.ComplexObjectL45 complexObjectL45 = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_complexobjectl45(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ComplexObjectL44::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.ComplexObjectL44)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 var_int321 = 1;
  if (this->_internal_var_int321() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_var_int321(), target);
  }

  // int64 var_int641 = 2;
  if (this->_internal_var_int641() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_var_int641(), target);
  }

  // float var_float1 = 3;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_var_float1 = this->_internal_var_float1();
  uint32_t raw_var_float1;
  memcpy(&raw_var_float1, &tmp_var_float1, sizeof(tmp_var_float1));
  if (raw_var_float1 != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(3, this->_internal_var_float1(), target);
  }

  // double var_double1 = 4;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_var_double1 = this->_internal_var_double1();
  uint64_t raw_var_double1;
  memcpy(&raw_var_double1, &tmp_var_double1, sizeof(tmp_var_double1));
  if (raw_var_double1 != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(4, this->_internal_var_double1(), target);
  }

  // bool var_bool1 = 5;
  if (this->_internal_var_bool1() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(5, this->_internal_var_bool1(), target);
  }

  // string var_string1 = 6;
  if (!this->_internal_var_string1().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_var_string1().data(), static_cast<int>(this->_internal_var_string1().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.ComplexObjectL44.var_string1");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_var_string1(), target);
  }

  // .proto.ComplexObjectL45 complexObjectL45 = 7;
  if (this->_internal_has_complexobjectl45()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::complexobjectl45(this),
        _Internal::complexobjectl45(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ComplexObjectL44)
  return target;
}

size_t ComplexObjectL44::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ComplexObjectL44)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string var_string1 = 6;
  if (!this->_internal_var_string1().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_var_string1());
  }

  // .proto.ComplexObjectL45 complexObjectL45 = 7;
  if (this->_internal_has_complexobjectl45()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.complexobjectl45_);
  }

  // int64 var_int641 = 2;
  if (this->_internal_var_int641() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_var_int641());
  }

  // int32 var_int321 = 1;
  if (this->_internal_var_int321() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_var_int321());
  }

  // float var_float1 = 3;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_var_float1 = this->_internal_var_float1();
  uint32_t raw_var_float1;
  memcpy(&raw_var_float1, &tmp_var_float1, sizeof(tmp_var_float1));
  if (raw_var_float1 != 0) {
    total_size += 1 + 4;
  }

  // double var_double1 = 4;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_var_double1 = this->_internal_var_double1();
  uint64_t raw_var_double1;
  memcpy(&raw_var_double1, &tmp_var_double1, sizeof(tmp_var_double1));
  if (raw_var_double1 != 0) {
    total_size += 1 + 8;
  }

  // bool var_bool1 = 5;
  if (this->_internal_var_bool1() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ComplexObjectL44::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ComplexObjectL44::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ComplexObjectL44::GetClassData() const { return &_class_data_; }


void ComplexObjectL44::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ComplexObjectL44*>(&to_msg);
  auto& from = static_cast<const ComplexObjectL44&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.ComplexObjectL44)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_var_string1().empty()) {
    _this->_internal_set_var_string1(from._internal_var_string1());
  }
  if (from._internal_has_complexobjectl45()) {
    _this->_internal_mutable_complexobjectl45()->::proto::ComplexObjectL45::MergeFrom(
        from._internal_complexobjectl45());
  }
  if (from._internal_var_int641() != 0) {
    _this->_internal_set_var_int641(from._internal_var_int641());
  }
  if (from._internal_var_int321() != 0) {
    _this->_internal_set_var_int321(from._internal_var_int321());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_var_float1 = from._internal_var_float1();
  uint32_t raw_var_float1;
  memcpy(&raw_var_float1, &tmp_var_float1, sizeof(tmp_var_float1));
  if (raw_var_float1 != 0) {
    _this->_internal_set_var_float1(from._internal_var_float1());
  }
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_var_double1 = from._internal_var_double1();
  uint64_t raw_var_double1;
  memcpy(&raw_var_double1, &tmp_var_double1, sizeof(tmp_var_double1));
  if (raw_var_double1 != 0) {
    _this->_internal_set_var_double1(from._internal_var_double1());
  }
  if (from._internal_var_bool1() != 0) {
    _this->_internal_set_var_bool1(from._internal_var_bool1());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ComplexObjectL44::CopyFrom(const ComplexObjectL44& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ComplexObjectL44)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ComplexObjectL44::IsInitialized() const {
  return true;
}

void ComplexObjectL44::InternalSwap(ComplexObjectL44* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.var_string1_, lhs_arena,
      &other->_impl_.var_string1_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ComplexObjectL44, _impl_.var_bool1_)
      + sizeof(ComplexObjectL44::_impl_.var_bool1_)
      - PROTOBUF_FIELD_OFFSET(ComplexObjectL44, _impl_.complexobjectl45_)>(
          reinterpret_cast<char*>(&_impl_.complexobjectl45_),
          reinterpret_cast<char*>(&other->_impl_.complexobjectl45_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ComplexObjectL44::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ComplexObjectL4_2eproto_getter, &descriptor_table_ComplexObjectL4_2eproto_once,
      file_level_metadata_ComplexObjectL4_2eproto[4]);
}

// ===================================================================

class ComplexObjectL45::_Internal {
 public:
  static const ::proto::ComplexObjectL46& complexobjectl46(const ComplexObjectL45* msg);
};

const ::proto::ComplexObjectL46&
ComplexObjectL45::_Internal::complexobjectl46(const ComplexObjectL45* msg) {
  return *msg->_impl_.complexobjectl46_;
}
ComplexObjectL45::ComplexObjectL45(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.ComplexObjectL45)
}
ComplexObjectL45::ComplexObjectL45(const ComplexObjectL45& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ComplexObjectL45* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.var_string1_){}
    , decltype(_impl_.complexobjectl46_){nullptr}
    , decltype(_impl_.var_int641_){}
    , decltype(_impl_.var_int321_){}
    , decltype(_impl_.var_float1_){}
    , decltype(_impl_.var_double1_){}
    , decltype(_impl_.var_bool1_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.var_string1_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.var_string1_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_var_string1().empty()) {
    _this->_impl_.var_string1_.Set(from._internal_var_string1(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_complexobjectl46()) {
    _this->_impl_.complexobjectl46_ = new ::proto::ComplexObjectL46(*from._impl_.complexobjectl46_);
  }
  ::memcpy(&_impl_.var_int641_, &from._impl_.var_int641_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.var_bool1_) -
    reinterpret_cast<char*>(&_impl_.var_int641_)) + sizeof(_impl_.var_bool1_));
  // @@protoc_insertion_point(copy_constructor:proto.ComplexObjectL45)
}

inline void ComplexObjectL45::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.var_string1_){}
    , decltype(_impl_.complexobjectl46_){nullptr}
    , decltype(_impl_.var_int641_){int64_t{0}}
    , decltype(_impl_.var_int321_){0}
    , decltype(_impl_.var_float1_){0}
    , decltype(_impl_.var_double1_){0}
    , decltype(_impl_.var_bool1_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.var_string1_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.var_string1_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ComplexObjectL45::~ComplexObjectL45() {
  // @@protoc_insertion_point(destructor:proto.ComplexObjectL45)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ComplexObjectL45::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.var_string1_.Destroy();
  if (this != internal_default_instance()) delete _impl_.complexobjectl46_;
}

void ComplexObjectL45::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ComplexObjectL45::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ComplexObjectL45)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.var_string1_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.complexobjectl46_ != nullptr) {
    delete _impl_.complexobjectl46_;
  }
  _impl_.complexobjectl46_ = nullptr;
  ::memset(&_impl_.var_int641_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.var_bool1_) -
      reinterpret_cast<char*>(&_impl_.var_int641_)) + sizeof(_impl_.var_bool1_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ComplexObjectL45::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 var_int321 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.var_int321_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 var_int641 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.var_int641_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // float var_float1 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 29)) {
          _impl_.var_float1_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // double var_double1 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 33)) {
          _impl_.var_double1_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // bool var_bool1 = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.var_bool1_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string var_string1 = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_var_string1();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.ComplexObjectL45.var_string1"));
        } else
          goto handle_unusual;
        continue;
      // .proto.ComplexObjectL46 complexObjectL46 = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_complexobjectl46(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ComplexObjectL45::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.ComplexObjectL45)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 var_int321 = 1;
  if (this->_internal_var_int321() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_var_int321(), target);
  }

  // int64 var_int641 = 2;
  if (this->_internal_var_int641() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_var_int641(), target);
  }

  // float var_float1 = 3;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_var_float1 = this->_internal_var_float1();
  uint32_t raw_var_float1;
  memcpy(&raw_var_float1, &tmp_var_float1, sizeof(tmp_var_float1));
  if (raw_var_float1 != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(3, this->_internal_var_float1(), target);
  }

  // double var_double1 = 4;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_var_double1 = this->_internal_var_double1();
  uint64_t raw_var_double1;
  memcpy(&raw_var_double1, &tmp_var_double1, sizeof(tmp_var_double1));
  if (raw_var_double1 != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(4, this->_internal_var_double1(), target);
  }

  // bool var_bool1 = 5;
  if (this->_internal_var_bool1() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(5, this->_internal_var_bool1(), target);
  }

  // string var_string1 = 6;
  if (!this->_internal_var_string1().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_var_string1().data(), static_cast<int>(this->_internal_var_string1().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.ComplexObjectL45.var_string1");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_var_string1(), target);
  }

  // .proto.ComplexObjectL46 complexObjectL46 = 7;
  if (this->_internal_has_complexobjectl46()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::complexobjectl46(this),
        _Internal::complexobjectl46(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ComplexObjectL45)
  return target;
}

size_t ComplexObjectL45::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ComplexObjectL45)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string var_string1 = 6;
  if (!this->_internal_var_string1().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_var_string1());
  }

  // .proto.ComplexObjectL46 complexObjectL46 = 7;
  if (this->_internal_has_complexobjectl46()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.complexobjectl46_);
  }

  // int64 var_int641 = 2;
  if (this->_internal_var_int641() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_var_int641());
  }

  // int32 var_int321 = 1;
  if (this->_internal_var_int321() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_var_int321());
  }

  // float var_float1 = 3;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_var_float1 = this->_internal_var_float1();
  uint32_t raw_var_float1;
  memcpy(&raw_var_float1, &tmp_var_float1, sizeof(tmp_var_float1));
  if (raw_var_float1 != 0) {
    total_size += 1 + 4;
  }

  // double var_double1 = 4;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_var_double1 = this->_internal_var_double1();
  uint64_t raw_var_double1;
  memcpy(&raw_var_double1, &tmp_var_double1, sizeof(tmp_var_double1));
  if (raw_var_double1 != 0) {
    total_size += 1 + 8;
  }

  // bool var_bool1 = 5;
  if (this->_internal_var_bool1() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ComplexObjectL45::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ComplexObjectL45::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ComplexObjectL45::GetClassData() const { return &_class_data_; }


void ComplexObjectL45::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ComplexObjectL45*>(&to_msg);
  auto& from = static_cast<const ComplexObjectL45&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.ComplexObjectL45)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_var_string1().empty()) {
    _this->_internal_set_var_string1(from._internal_var_string1());
  }
  if (from._internal_has_complexobjectl46()) {
    _this->_internal_mutable_complexobjectl46()->::proto::ComplexObjectL46::MergeFrom(
        from._internal_complexobjectl46());
  }
  if (from._internal_var_int641() != 0) {
    _this->_internal_set_var_int641(from._internal_var_int641());
  }
  if (from._internal_var_int321() != 0) {
    _this->_internal_set_var_int321(from._internal_var_int321());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_var_float1 = from._internal_var_float1();
  uint32_t raw_var_float1;
  memcpy(&raw_var_float1, &tmp_var_float1, sizeof(tmp_var_float1));
  if (raw_var_float1 != 0) {
    _this->_internal_set_var_float1(from._internal_var_float1());
  }
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_var_double1 = from._internal_var_double1();
  uint64_t raw_var_double1;
  memcpy(&raw_var_double1, &tmp_var_double1, sizeof(tmp_var_double1));
  if (raw_var_double1 != 0) {
    _this->_internal_set_var_double1(from._internal_var_double1());
  }
  if (from._internal_var_bool1() != 0) {
    _this->_internal_set_var_bool1(from._internal_var_bool1());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ComplexObjectL45::CopyFrom(const ComplexObjectL45& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ComplexObjectL45)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ComplexObjectL45::IsInitialized() const {
  return true;
}

void ComplexObjectL45::InternalSwap(ComplexObjectL45* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.var_string1_, lhs_arena,
      &other->_impl_.var_string1_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ComplexObjectL45, _impl_.var_bool1_)
      + sizeof(ComplexObjectL45::_impl_.var_bool1_)
      - PROTOBUF_FIELD_OFFSET(ComplexObjectL45, _impl_.complexobjectl46_)>(
          reinterpret_cast<char*>(&_impl_.complexobjectl46_),
          reinterpret_cast<char*>(&other->_impl_.complexobjectl46_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ComplexObjectL45::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ComplexObjectL4_2eproto_getter, &descriptor_table_ComplexObjectL4_2eproto_once,
      file_level_metadata_ComplexObjectL4_2eproto[5]);
}

// ===================================================================

class ComplexObjectL46::_Internal {
 public:
  static const ::proto::ComplexObjectL47& complexobjectl47(const ComplexObjectL46* msg);
};

const ::proto::ComplexObjectL47&
ComplexObjectL46::_Internal::complexobjectl47(const ComplexObjectL46* msg) {
  return *msg->_impl_.complexobjectl47_;
}
ComplexObjectL46::ComplexObjectL46(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.ComplexObjectL46)
}
ComplexObjectL46::ComplexObjectL46(const ComplexObjectL46& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ComplexObjectL46* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.var_string1_){}
    , decltype(_impl_.complexobjectl47_){nullptr}
    , decltype(_impl_.var_int641_){}
    , decltype(_impl_.var_int321_){}
    , decltype(_impl_.var_float1_){}
    , decltype(_impl_.var_double1_){}
    , decltype(_impl_.var_bool1_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.var_string1_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.var_string1_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_var_string1().empty()) {
    _this->_impl_.var_string1_.Set(from._internal_var_string1(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_complexobjectl47()) {
    _this->_impl_.complexobjectl47_ = new ::proto::ComplexObjectL47(*from._impl_.complexobjectl47_);
  }
  ::memcpy(&_impl_.var_int641_, &from._impl_.var_int641_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.var_bool1_) -
    reinterpret_cast<char*>(&_impl_.var_int641_)) + sizeof(_impl_.var_bool1_));
  // @@protoc_insertion_point(copy_constructor:proto.ComplexObjectL46)
}

inline void ComplexObjectL46::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.var_string1_){}
    , decltype(_impl_.complexobjectl47_){nullptr}
    , decltype(_impl_.var_int641_){int64_t{0}}
    , decltype(_impl_.var_int321_){0}
    , decltype(_impl_.var_float1_){0}
    , decltype(_impl_.var_double1_){0}
    , decltype(_impl_.var_bool1_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.var_string1_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.var_string1_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ComplexObjectL46::~ComplexObjectL46() {
  // @@protoc_insertion_point(destructor:proto.ComplexObjectL46)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ComplexObjectL46::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.var_string1_.Destroy();
  if (this != internal_default_instance()) delete _impl_.complexobjectl47_;
}

void ComplexObjectL46::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ComplexObjectL46::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ComplexObjectL46)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.var_string1_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.complexobjectl47_ != nullptr) {
    delete _impl_.complexobjectl47_;
  }
  _impl_.complexobjectl47_ = nullptr;
  ::memset(&_impl_.var_int641_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.var_bool1_) -
      reinterpret_cast<char*>(&_impl_.var_int641_)) + sizeof(_impl_.var_bool1_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ComplexObjectL46::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 var_int321 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.var_int321_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 var_int641 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.var_int641_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // float var_float1 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 29)) {
          _impl_.var_float1_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // double var_double1 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 33)) {
          _impl_.var_double1_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // bool var_bool1 = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.var_bool1_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string var_string1 = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_var_string1();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.ComplexObjectL46.var_string1"));
        } else
          goto handle_unusual;
        continue;
      // .proto.ComplexObjectL47 complexObjectL47 = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_complexobjectl47(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ComplexObjectL46::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.ComplexObjectL46)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 var_int321 = 1;
  if (this->_internal_var_int321() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_var_int321(), target);
  }

  // int64 var_int641 = 2;
  if (this->_internal_var_int641() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_var_int641(), target);
  }

  // float var_float1 = 3;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_var_float1 = this->_internal_var_float1();
  uint32_t raw_var_float1;
  memcpy(&raw_var_float1, &tmp_var_float1, sizeof(tmp_var_float1));
  if (raw_var_float1 != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(3, this->_internal_var_float1(), target);
  }

  // double var_double1 = 4;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_var_double1 = this->_internal_var_double1();
  uint64_t raw_var_double1;
  memcpy(&raw_var_double1, &tmp_var_double1, sizeof(tmp_var_double1));
  if (raw_var_double1 != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(4, this->_internal_var_double1(), target);
  }

  // bool var_bool1 = 5;
  if (this->_internal_var_bool1() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(5, this->_internal_var_bool1(), target);
  }

  // string var_string1 = 6;
  if (!this->_internal_var_string1().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_var_string1().data(), static_cast<int>(this->_internal_var_string1().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.ComplexObjectL46.var_string1");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_var_string1(), target);
  }

  // .proto.ComplexObjectL47 complexObjectL47 = 7;
  if (this->_internal_has_complexobjectl47()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::complexobjectl47(this),
        _Internal::complexobjectl47(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ComplexObjectL46)
  return target;
}

size_t ComplexObjectL46::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ComplexObjectL46)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string var_string1 = 6;
  if (!this->_internal_var_string1().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_var_string1());
  }

  // .proto.ComplexObjectL47 complexObjectL47 = 7;
  if (this->_internal_has_complexobjectl47()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.complexobjectl47_);
  }

  // int64 var_int641 = 2;
  if (this->_internal_var_int641() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_var_int641());
  }

  // int32 var_int321 = 1;
  if (this->_internal_var_int321() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_var_int321());
  }

  // float var_float1 = 3;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_var_float1 = this->_internal_var_float1();
  uint32_t raw_var_float1;
  memcpy(&raw_var_float1, &tmp_var_float1, sizeof(tmp_var_float1));
  if (raw_var_float1 != 0) {
    total_size += 1 + 4;
  }

  // double var_double1 = 4;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_var_double1 = this->_internal_var_double1();
  uint64_t raw_var_double1;
  memcpy(&raw_var_double1, &tmp_var_double1, sizeof(tmp_var_double1));
  if (raw_var_double1 != 0) {
    total_size += 1 + 8;
  }

  // bool var_bool1 = 5;
  if (this->_internal_var_bool1() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ComplexObjectL46::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ComplexObjectL46::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ComplexObjectL46::GetClassData() const { return &_class_data_; }


void ComplexObjectL46::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ComplexObjectL46*>(&to_msg);
  auto& from = static_cast<const ComplexObjectL46&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.ComplexObjectL46)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_var_string1().empty()) {
    _this->_internal_set_var_string1(from._internal_var_string1());
  }
  if (from._internal_has_complexobjectl47()) {
    _this->_internal_mutable_complexobjectl47()->::proto::ComplexObjectL47::MergeFrom(
        from._internal_complexobjectl47());
  }
  if (from._internal_var_int641() != 0) {
    _this->_internal_set_var_int641(from._internal_var_int641());
  }
  if (from._internal_var_int321() != 0) {
    _this->_internal_set_var_int321(from._internal_var_int321());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_var_float1 = from._internal_var_float1();
  uint32_t raw_var_float1;
  memcpy(&raw_var_float1, &tmp_var_float1, sizeof(tmp_var_float1));
  if (raw_var_float1 != 0) {
    _this->_internal_set_var_float1(from._internal_var_float1());
  }
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_var_double1 = from._internal_var_double1();
  uint64_t raw_var_double1;
  memcpy(&raw_var_double1, &tmp_var_double1, sizeof(tmp_var_double1));
  if (raw_var_double1 != 0) {
    _this->_internal_set_var_double1(from._internal_var_double1());
  }
  if (from._internal_var_bool1() != 0) {
    _this->_internal_set_var_bool1(from._internal_var_bool1());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ComplexObjectL46::CopyFrom(const ComplexObjectL46& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ComplexObjectL46)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ComplexObjectL46::IsInitialized() const {
  return true;
}

void ComplexObjectL46::InternalSwap(ComplexObjectL46* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.var_string1_, lhs_arena,
      &other->_impl_.var_string1_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ComplexObjectL46, _impl_.var_bool1_)
      + sizeof(ComplexObjectL46::_impl_.var_bool1_)
      - PROTOBUF_FIELD_OFFSET(ComplexObjectL46, _impl_.complexobjectl47_)>(
          reinterpret_cast<char*>(&_impl_.complexobjectl47_),
          reinterpret_cast<char*>(&other->_impl_.complexobjectl47_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ComplexObjectL46::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ComplexObjectL4_2eproto_getter, &descriptor_table_ComplexObjectL4_2eproto_once,
      file_level_metadata_ComplexObjectL4_2eproto[6]);
}

// ===================================================================

class ComplexObjectL47::_Internal {
 public:
  static const ::proto::ComplexObjectL48& complexobjectl48(const ComplexObjectL47* msg);
};

const ::proto::ComplexObjectL48&
ComplexObjectL47::_Internal::complexobjectl48(const ComplexObjectL47* msg) {
  return *msg->_impl_.complexobjectl48_;
}
ComplexObjectL47::ComplexObjectL47(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.ComplexObjectL47)
}
ComplexObjectL47::ComplexObjectL47(const ComplexObjectL47& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ComplexObjectL47* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.var_string1_){}
    , decltype(_impl_.complexobjectl48_){nullptr}
    , decltype(_impl_.var_int641_){}
    , decltype(_impl_.var_int321_){}
    , decltype(_impl_.var_float1_){}
    , decltype(_impl_.var_double1_){}
    , decltype(_impl_.var_bool1_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.var_string1_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.var_string1_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_var_string1().empty()) {
    _this->_impl_.var_string1_.Set(from._internal_var_string1(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_complexobjectl48()) {
    _this->_impl_.complexobjectl48_ = new ::proto::ComplexObjectL48(*from._impl_.complexobjectl48_);
  }
  ::memcpy(&_impl_.var_int641_, &from._impl_.var_int641_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.var_bool1_) -
    reinterpret_cast<char*>(&_impl_.var_int641_)) + sizeof(_impl_.var_bool1_));
  // @@protoc_insertion_point(copy_constructor:proto.ComplexObjectL47)
}

inline void ComplexObjectL47::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.var_string1_){}
    , decltype(_impl_.complexobjectl48_){nullptr}
    , decltype(_impl_.var_int641_){int64_t{0}}
    , decltype(_impl_.var_int321_){0}
    , decltype(_impl_.var_float1_){0}
    , decltype(_impl_.var_double1_){0}
    , decltype(_impl_.var_bool1_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.var_string1_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.var_string1_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ComplexObjectL47::~ComplexObjectL47() {
  // @@protoc_insertion_point(destructor:proto.ComplexObjectL47)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ComplexObjectL47::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.var_string1_.Destroy();
  if (this != internal_default_instance()) delete _impl_.complexobjectl48_;
}

void ComplexObjectL47::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ComplexObjectL47::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ComplexObjectL47)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.var_string1_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.complexobjectl48_ != nullptr) {
    delete _impl_.complexobjectl48_;
  }
  _impl_.complexobjectl48_ = nullptr;
  ::memset(&_impl_.var_int641_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.var_bool1_) -
      reinterpret_cast<char*>(&_impl_.var_int641_)) + sizeof(_impl_.var_bool1_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ComplexObjectL47::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 var_int321 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.var_int321_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 var_int641 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.var_int641_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // float var_float1 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 29)) {
          _impl_.var_float1_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // double var_double1 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 33)) {
          _impl_.var_double1_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // bool var_bool1 = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.var_bool1_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string var_string1 = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_var_string1();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.ComplexObjectL47.var_string1"));
        } else
          goto handle_unusual;
        continue;
      // .proto.ComplexObjectL48 complexObjectL48 = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_complexobjectl48(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ComplexObjectL47::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.ComplexObjectL47)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 var_int321 = 1;
  if (this->_internal_var_int321() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_var_int321(), target);
  }

  // int64 var_int641 = 2;
  if (this->_internal_var_int641() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_var_int641(), target);
  }

  // float var_float1 = 3;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_var_float1 = this->_internal_var_float1();
  uint32_t raw_var_float1;
  memcpy(&raw_var_float1, &tmp_var_float1, sizeof(tmp_var_float1));
  if (raw_var_float1 != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(3, this->_internal_var_float1(), target);
  }

  // double var_double1 = 4;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_var_double1 = this->_internal_var_double1();
  uint64_t raw_var_double1;
  memcpy(&raw_var_double1, &tmp_var_double1, sizeof(tmp_var_double1));
  if (raw_var_double1 != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(4, this->_internal_var_double1(), target);
  }

  // bool var_bool1 = 5;
  if (this->_internal_var_bool1() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(5, this->_internal_var_bool1(), target);
  }

  // string var_string1 = 6;
  if (!this->_internal_var_string1().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_var_string1().data(), static_cast<int>(this->_internal_var_string1().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.ComplexObjectL47.var_string1");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_var_string1(), target);
  }

  // .proto.ComplexObjectL48 complexObjectL48 = 7;
  if (this->_internal_has_complexobjectl48()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::complexobjectl48(this),
        _Internal::complexobjectl48(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ComplexObjectL47)
  return target;
}

size_t ComplexObjectL47::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ComplexObjectL47)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string var_string1 = 6;
  if (!this->_internal_var_string1().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_var_string1());
  }

  // .proto.ComplexObjectL48 complexObjectL48 = 7;
  if (this->_internal_has_complexobjectl48()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.complexobjectl48_);
  }

  // int64 var_int641 = 2;
  if (this->_internal_var_int641() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_var_int641());
  }

  // int32 var_int321 = 1;
  if (this->_internal_var_int321() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_var_int321());
  }

  // float var_float1 = 3;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_var_float1 = this->_internal_var_float1();
  uint32_t raw_var_float1;
  memcpy(&raw_var_float1, &tmp_var_float1, sizeof(tmp_var_float1));
  if (raw_var_float1 != 0) {
    total_size += 1 + 4;
  }

  // double var_double1 = 4;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_var_double1 = this->_internal_var_double1();
  uint64_t raw_var_double1;
  memcpy(&raw_var_double1, &tmp_var_double1, sizeof(tmp_var_double1));
  if (raw_var_double1 != 0) {
    total_size += 1 + 8;
  }

  // bool var_bool1 = 5;
  if (this->_internal_var_bool1() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ComplexObjectL47::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ComplexObjectL47::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ComplexObjectL47::GetClassData() const { return &_class_data_; }


void ComplexObjectL47::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ComplexObjectL47*>(&to_msg);
  auto& from = static_cast<const ComplexObjectL47&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.ComplexObjectL47)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_var_string1().empty()) {
    _this->_internal_set_var_string1(from._internal_var_string1());
  }
  if (from._internal_has_complexobjectl48()) {
    _this->_internal_mutable_complexobjectl48()->::proto::ComplexObjectL48::MergeFrom(
        from._internal_complexobjectl48());
  }
  if (from._internal_var_int641() != 0) {
    _this->_internal_set_var_int641(from._internal_var_int641());
  }
  if (from._internal_var_int321() != 0) {
    _this->_internal_set_var_int321(from._internal_var_int321());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_var_float1 = from._internal_var_float1();
  uint32_t raw_var_float1;
  memcpy(&raw_var_float1, &tmp_var_float1, sizeof(tmp_var_float1));
  if (raw_var_float1 != 0) {
    _this->_internal_set_var_float1(from._internal_var_float1());
  }
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_var_double1 = from._internal_var_double1();
  uint64_t raw_var_double1;
  memcpy(&raw_var_double1, &tmp_var_double1, sizeof(tmp_var_double1));
  if (raw_var_double1 != 0) {
    _this->_internal_set_var_double1(from._internal_var_double1());
  }
  if (from._internal_var_bool1() != 0) {
    _this->_internal_set_var_bool1(from._internal_var_bool1());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ComplexObjectL47::CopyFrom(const ComplexObjectL47& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ComplexObjectL47)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ComplexObjectL47::IsInitialized() const {
  return true;
}

void ComplexObjectL47::InternalSwap(ComplexObjectL47* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.var_string1_, lhs_arena,
      &other->_impl_.var_string1_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ComplexObjectL47, _impl_.var_bool1_)
      + sizeof(ComplexObjectL47::_impl_.var_bool1_)
      - PROTOBUF_FIELD_OFFSET(ComplexObjectL47, _impl_.complexobjectl48_)>(
          reinterpret_cast<char*>(&_impl_.complexobjectl48_),
          reinterpret_cast<char*>(&other->_impl_.complexobjectl48_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ComplexObjectL47::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ComplexObjectL4_2eproto_getter, &descriptor_table_ComplexObjectL4_2eproto_once,
      file_level_metadata_ComplexObjectL4_2eproto[7]);
}

// ===================================================================

class ComplexObjectL48::_Internal {
 public:
  static const ::proto::ComplexObjectL49& complexobjectl49(const ComplexObjectL48* msg);
};

const ::proto::ComplexObjectL49&
ComplexObjectL48::_Internal::complexobjectl49(const ComplexObjectL48* msg) {
  return *msg->_impl_.complexobjectl49_;
}
ComplexObjectL48::ComplexObjectL48(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.ComplexObjectL48)
}
ComplexObjectL48::ComplexObjectL48(const ComplexObjectL48& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ComplexObjectL48* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.var_string1_){}
    , decltype(_impl_.complexobjectl49_){nullptr}
    , decltype(_impl_.var_int641_){}
    , decltype(_impl_.var_int321_){}
    , decltype(_impl_.var_float1_){}
    , decltype(_impl_.var_double1_){}
    , decltype(_impl_.var_bool1_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.var_string1_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.var_string1_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_var_string1().empty()) {
    _this->_impl_.var_string1_.Set(from._internal_var_string1(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_complexobjectl49()) {
    _this->_impl_.complexobjectl49_ = new ::proto::ComplexObjectL49(*from._impl_.complexobjectl49_);
  }
  ::memcpy(&_impl_.var_int641_, &from._impl_.var_int641_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.var_bool1_) -
    reinterpret_cast<char*>(&_impl_.var_int641_)) + sizeof(_impl_.var_bool1_));
  // @@protoc_insertion_point(copy_constructor:proto.ComplexObjectL48)
}

inline void ComplexObjectL48::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.var_string1_){}
    , decltype(_impl_.complexobjectl49_){nullptr}
    , decltype(_impl_.var_int641_){int64_t{0}}
    , decltype(_impl_.var_int321_){0}
    , decltype(_impl_.var_float1_){0}
    , decltype(_impl_.var_double1_){0}
    , decltype(_impl_.var_bool1_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.var_string1_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.var_string1_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ComplexObjectL48::~ComplexObjectL48() {
  // @@protoc_insertion_point(destructor:proto.ComplexObjectL48)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ComplexObjectL48::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.var_string1_.Destroy();
  if (this != internal_default_instance()) delete _impl_.complexobjectl49_;
}

void ComplexObjectL48::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ComplexObjectL48::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ComplexObjectL48)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.var_string1_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.complexobjectl49_ != nullptr) {
    delete _impl_.complexobjectl49_;
  }
  _impl_.complexobjectl49_ = nullptr;
  ::memset(&_impl_.var_int641_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.var_bool1_) -
      reinterpret_cast<char*>(&_impl_.var_int641_)) + sizeof(_impl_.var_bool1_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ComplexObjectL48::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 var_int321 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.var_int321_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 var_int641 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.var_int641_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // float var_float1 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 29)) {
          _impl_.var_float1_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // double var_double1 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 33)) {
          _impl_.var_double1_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // bool var_bool1 = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.var_bool1_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string var_string1 = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_var_string1();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.ComplexObjectL48.var_string1"));
        } else
          goto handle_unusual;
        continue;
      // .proto.ComplexObjectL49 complexObjectL49 = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_complexobjectl49(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ComplexObjectL48::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.ComplexObjectL48)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 var_int321 = 1;
  if (this->_internal_var_int321() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_var_int321(), target);
  }

  // int64 var_int641 = 2;
  if (this->_internal_var_int641() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_var_int641(), target);
  }

  // float var_float1 = 3;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_var_float1 = this->_internal_var_float1();
  uint32_t raw_var_float1;
  memcpy(&raw_var_float1, &tmp_var_float1, sizeof(tmp_var_float1));
  if (raw_var_float1 != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(3, this->_internal_var_float1(), target);
  }

  // double var_double1 = 4;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_var_double1 = this->_internal_var_double1();
  uint64_t raw_var_double1;
  memcpy(&raw_var_double1, &tmp_var_double1, sizeof(tmp_var_double1));
  if (raw_var_double1 != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(4, this->_internal_var_double1(), target);
  }

  // bool var_bool1 = 5;
  if (this->_internal_var_bool1() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(5, this->_internal_var_bool1(), target);
  }

  // string var_string1 = 6;
  if (!this->_internal_var_string1().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_var_string1().data(), static_cast<int>(this->_internal_var_string1().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.ComplexObjectL48.var_string1");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_var_string1(), target);
  }

  // .proto.ComplexObjectL49 complexObjectL49 = 7;
  if (this->_internal_has_complexobjectl49()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::complexobjectl49(this),
        _Internal::complexobjectl49(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ComplexObjectL48)
  return target;
}

size_t ComplexObjectL48::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ComplexObjectL48)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string var_string1 = 6;
  if (!this->_internal_var_string1().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_var_string1());
  }

  // .proto.ComplexObjectL49 complexObjectL49 = 7;
  if (this->_internal_has_complexobjectl49()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.complexobjectl49_);
  }

  // int64 var_int641 = 2;
  if (this->_internal_var_int641() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_var_int641());
  }

  // int32 var_int321 = 1;
  if (this->_internal_var_int321() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_var_int321());
  }

  // float var_float1 = 3;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_var_float1 = this->_internal_var_float1();
  uint32_t raw_var_float1;
  memcpy(&raw_var_float1, &tmp_var_float1, sizeof(tmp_var_float1));
  if (raw_var_float1 != 0) {
    total_size += 1 + 4;
  }

  // double var_double1 = 4;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_var_double1 = this->_internal_var_double1();
  uint64_t raw_var_double1;
  memcpy(&raw_var_double1, &tmp_var_double1, sizeof(tmp_var_double1));
  if (raw_var_double1 != 0) {
    total_size += 1 + 8;
  }

  // bool var_bool1 = 5;
  if (this->_internal_var_bool1() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ComplexObjectL48::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ComplexObjectL48::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ComplexObjectL48::GetClassData() const { return &_class_data_; }


void ComplexObjectL48::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ComplexObjectL48*>(&to_msg);
  auto& from = static_cast<const ComplexObjectL48&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.ComplexObjectL48)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_var_string1().empty()) {
    _this->_internal_set_var_string1(from._internal_var_string1());
  }
  if (from._internal_has_complexobjectl49()) {
    _this->_internal_mutable_complexobjectl49()->::proto::ComplexObjectL49::MergeFrom(
        from._internal_complexobjectl49());
  }
  if (from._internal_var_int641() != 0) {
    _this->_internal_set_var_int641(from._internal_var_int641());
  }
  if (from._internal_var_int321() != 0) {
    _this->_internal_set_var_int321(from._internal_var_int321());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_var_float1 = from._internal_var_float1();
  uint32_t raw_var_float1;
  memcpy(&raw_var_float1, &tmp_var_float1, sizeof(tmp_var_float1));
  if (raw_var_float1 != 0) {
    _this->_internal_set_var_float1(from._internal_var_float1());
  }
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_var_double1 = from._internal_var_double1();
  uint64_t raw_var_double1;
  memcpy(&raw_var_double1, &tmp_var_double1, sizeof(tmp_var_double1));
  if (raw_var_double1 != 0) {
    _this->_internal_set_var_double1(from._internal_var_double1());
  }
  if (from._internal_var_bool1() != 0) {
    _this->_internal_set_var_bool1(from._internal_var_bool1());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ComplexObjectL48::CopyFrom(const ComplexObjectL48& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ComplexObjectL48)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ComplexObjectL48::IsInitialized() const {
  return true;
}

void ComplexObjectL48::InternalSwap(ComplexObjectL48* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.var_string1_, lhs_arena,
      &other->_impl_.var_string1_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ComplexObjectL48, _impl_.var_bool1_)
      + sizeof(ComplexObjectL48::_impl_.var_bool1_)
      - PROTOBUF_FIELD_OFFSET(ComplexObjectL48, _impl_.complexobjectl49_)>(
          reinterpret_cast<char*>(&_impl_.complexobjectl49_),
          reinterpret_cast<char*>(&other->_impl_.complexobjectl49_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ComplexObjectL48::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ComplexObjectL4_2eproto_getter, &descriptor_table_ComplexObjectL4_2eproto_once,
      file_level_metadata_ComplexObjectL4_2eproto[8]);
}

// ===================================================================

class ComplexObjectL49::_Internal {
 public:
  static const ::proto::ComplexObjectL410& complexobjectl410(const ComplexObjectL49* msg);
};

const ::proto::ComplexObjectL410&
ComplexObjectL49::_Internal::complexobjectl410(const ComplexObjectL49* msg) {
  return *msg->_impl_.complexobjectl410_;
}
ComplexObjectL49::ComplexObjectL49(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.ComplexObjectL49)
}
ComplexObjectL49::ComplexObjectL49(const ComplexObjectL49& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ComplexObjectL49* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.var_string1_){}
    , decltype(_impl_.complexobjectl410_){nullptr}
    , decltype(_impl_.var_int641_){}
    , decltype(_impl_.var_int321_){}
    , decltype(_impl_.var_float1_){}
    , decltype(_impl_.var_double1_){}
    , decltype(_impl_.var_bool1_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.var_string1_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.var_string1_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_var_string1().empty()) {
    _this->_impl_.var_string1_.Set(from._internal_var_string1(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_complexobjectl410()) {
    _this->_impl_.complexobjectl410_ = new ::proto::ComplexObjectL410(*from._impl_.complexobjectl410_);
  }
  ::memcpy(&_impl_.var_int641_, &from._impl_.var_int641_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.var_bool1_) -
    reinterpret_cast<char*>(&_impl_.var_int641_)) + sizeof(_impl_.var_bool1_));
  // @@protoc_insertion_point(copy_constructor:proto.ComplexObjectL49)
}

inline void ComplexObjectL49::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.var_string1_){}
    , decltype(_impl_.complexobjectl410_){nullptr}
    , decltype(_impl_.var_int641_){int64_t{0}}
    , decltype(_impl_.var_int321_){0}
    , decltype(_impl_.var_float1_){0}
    , decltype(_impl_.var_double1_){0}
    , decltype(_impl_.var_bool1_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.var_string1_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.var_string1_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ComplexObjectL49::~ComplexObjectL49() {
  // @@protoc_insertion_point(destructor:proto.ComplexObjectL49)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ComplexObjectL49::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.var_string1_.Destroy();
  if (this != internal_default_instance()) delete _impl_.complexobjectl410_;
}

void ComplexObjectL49::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ComplexObjectL49::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ComplexObjectL49)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.var_string1_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.complexobjectl410_ != nullptr) {
    delete _impl_.complexobjectl410_;
  }
  _impl_.complexobjectl410_ = nullptr;
  ::memset(&_impl_.var_int641_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.var_bool1_) -
      reinterpret_cast<char*>(&_impl_.var_int641_)) + sizeof(_impl_.var_bool1_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ComplexObjectL49::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 var_int321 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.var_int321_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 var_int641 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.var_int641_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // float var_float1 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 29)) {
          _impl_.var_float1_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // double var_double1 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 33)) {
          _impl_.var_double1_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // bool var_bool1 = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.var_bool1_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string var_string1 = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_var_string1();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.ComplexObjectL49.var_string1"));
        } else
          goto handle_unusual;
        continue;
      // .proto.ComplexObjectL410 complexObjectL410 = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_complexobjectl410(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ComplexObjectL49::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.ComplexObjectL49)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 var_int321 = 1;
  if (this->_internal_var_int321() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_var_int321(), target);
  }

  // int64 var_int641 = 2;
  if (this->_internal_var_int641() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_var_int641(), target);
  }

  // float var_float1 = 3;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_var_float1 = this->_internal_var_float1();
  uint32_t raw_var_float1;
  memcpy(&raw_var_float1, &tmp_var_float1, sizeof(tmp_var_float1));
  if (raw_var_float1 != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(3, this->_internal_var_float1(), target);
  }

  // double var_double1 = 4;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_var_double1 = this->_internal_var_double1();
  uint64_t raw_var_double1;
  memcpy(&raw_var_double1, &tmp_var_double1, sizeof(tmp_var_double1));
  if (raw_var_double1 != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(4, this->_internal_var_double1(), target);
  }

  // bool var_bool1 = 5;
  if (this->_internal_var_bool1() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(5, this->_internal_var_bool1(), target);
  }

  // string var_string1 = 6;
  if (!this->_internal_var_string1().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_var_string1().data(), static_cast<int>(this->_internal_var_string1().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.ComplexObjectL49.var_string1");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_var_string1(), target);
  }

  // .proto.ComplexObjectL410 complexObjectL410 = 7;
  if (this->_internal_has_complexobjectl410()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::complexobjectl410(this),
        _Internal::complexobjectl410(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ComplexObjectL49)
  return target;
}

size_t ComplexObjectL49::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ComplexObjectL49)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string var_string1 = 6;
  if (!this->_internal_var_string1().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_var_string1());
  }

  // .proto.ComplexObjectL410 complexObjectL410 = 7;
  if (this->_internal_has_complexobjectl410()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.complexobjectl410_);
  }

  // int64 var_int641 = 2;
  if (this->_internal_var_int641() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_var_int641());
  }

  // int32 var_int321 = 1;
  if (this->_internal_var_int321() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_var_int321());
  }

  // float var_float1 = 3;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_var_float1 = this->_internal_var_float1();
  uint32_t raw_var_float1;
  memcpy(&raw_var_float1, &tmp_var_float1, sizeof(tmp_var_float1));
  if (raw_var_float1 != 0) {
    total_size += 1 + 4;
  }

  // double var_double1 = 4;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_var_double1 = this->_internal_var_double1();
  uint64_t raw_var_double1;
  memcpy(&raw_var_double1, &tmp_var_double1, sizeof(tmp_var_double1));
  if (raw_var_double1 != 0) {
    total_size += 1 + 8;
  }

  // bool var_bool1 = 5;
  if (this->_internal_var_bool1() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ComplexObjectL49::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ComplexObjectL49::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ComplexObjectL49::GetClassData() const { return &_class_data_; }


void ComplexObjectL49::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ComplexObjectL49*>(&to_msg);
  auto& from = static_cast<const ComplexObjectL49&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.ComplexObjectL49)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_var_string1().empty()) {
    _this->_internal_set_var_string1(from._internal_var_string1());
  }
  if (from._internal_has_complexobjectl410()) {
    _this->_internal_mutable_complexobjectl410()->::proto::ComplexObjectL410::MergeFrom(
        from._internal_complexobjectl410());
  }
  if (from._internal_var_int641() != 0) {
    _this->_internal_set_var_int641(from._internal_var_int641());
  }
  if (from._internal_var_int321() != 0) {
    _this->_internal_set_var_int321(from._internal_var_int321());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_var_float1 = from._internal_var_float1();
  uint32_t raw_var_float1;
  memcpy(&raw_var_float1, &tmp_var_float1, sizeof(tmp_var_float1));
  if (raw_var_float1 != 0) {
    _this->_internal_set_var_float1(from._internal_var_float1());
  }
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_var_double1 = from._internal_var_double1();
  uint64_t raw_var_double1;
  memcpy(&raw_var_double1, &tmp_var_double1, sizeof(tmp_var_double1));
  if (raw_var_double1 != 0) {
    _this->_internal_set_var_double1(from._internal_var_double1());
  }
  if (from._internal_var_bool1() != 0) {
    _this->_internal_set_var_bool1(from._internal_var_bool1());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ComplexObjectL49::CopyFrom(const ComplexObjectL49& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ComplexObjectL49)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ComplexObjectL49::IsInitialized() const {
  return true;
}

void ComplexObjectL49::InternalSwap(ComplexObjectL49* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.var_string1_, lhs_arena,
      &other->_impl_.var_string1_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ComplexObjectL49, _impl_.var_bool1_)
      + sizeof(ComplexObjectL49::_impl_.var_bool1_)
      - PROTOBUF_FIELD_OFFSET(ComplexObjectL49, _impl_.complexobjectl410_)>(
          reinterpret_cast<char*>(&_impl_.complexobjectl410_),
          reinterpret_cast<char*>(&other->_impl_.complexobjectl410_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ComplexObjectL49::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ComplexObjectL4_2eproto_getter, &descriptor_table_ComplexObjectL4_2eproto_once,
      file_level_metadata_ComplexObjectL4_2eproto[9]);
}

// ===================================================================

class ComplexObjectL410::_Internal {
 public:
  static const ::proto::ComplexObjectL411& complexobjectl411(const ComplexObjectL410* msg);
};

const ::proto::ComplexObjectL411&
ComplexObjectL410::_Internal::complexobjectl411(const ComplexObjectL410* msg) {
  return *msg->_impl_.complexobjectl411_;
}
ComplexObjectL410::ComplexObjectL410(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.ComplexObjectL410)
}
ComplexObjectL410::ComplexObjectL410(const ComplexObjectL410& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ComplexObjectL410* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.var_string1_){}
    , decltype(_impl_.complexobjectl411_){nullptr}
    , decltype(_impl_.var_int641_){}
    , decltype(_impl_.var_int321_){}
    , decltype(_impl_.var_float1_){}
    , decltype(_impl_.var_double1_){}
    , decltype(_impl_.var_bool1_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.var_string1_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.var_string1_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_var_string1().empty()) {
    _this->_impl_.var_string1_.Set(from._internal_var_string1(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_complexobjectl411()) {
    _this->_impl_.complexobjectl411_ = new ::proto::ComplexObjectL411(*from._impl_.complexobjectl411_);
  }
  ::memcpy(&_impl_.var_int641_, &from._impl_.var_int641_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.var_bool1_) -
    reinterpret_cast<char*>(&_impl_.var_int641_)) + sizeof(_impl_.var_bool1_));
  // @@protoc_insertion_point(copy_constructor:proto.ComplexObjectL410)
}

inline void ComplexObjectL410::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.var_string1_){}
    , decltype(_impl_.complexobjectl411_){nullptr}
    , decltype(_impl_.var_int641_){int64_t{0}}
    , decltype(_impl_.var_int321_){0}
    , decltype(_impl_.var_float1_){0}
    , decltype(_impl_.var_double1_){0}
    , decltype(_impl_.var_bool1_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.var_string1_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.var_string1_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ComplexObjectL410::~ComplexObjectL410() {
  // @@protoc_insertion_point(destructor:proto.ComplexObjectL410)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ComplexObjectL410::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.var_string1_.Destroy();
  if (this != internal_default_instance()) delete _impl_.complexobjectl411_;
}

void ComplexObjectL410::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ComplexObjectL410::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ComplexObjectL410)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.var_string1_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.complexobjectl411_ != nullptr) {
    delete _impl_.complexobjectl411_;
  }
  _impl_.complexobjectl411_ = nullptr;
  ::memset(&_impl_.var_int641_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.var_bool1_) -
      reinterpret_cast<char*>(&_impl_.var_int641_)) + sizeof(_impl_.var_bool1_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ComplexObjectL410::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 var_int321 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.var_int321_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 var_int641 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.var_int641_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // float var_float1 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 29)) {
          _impl_.var_float1_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // double var_double1 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 33)) {
          _impl_.var_double1_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // bool var_bool1 = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.var_bool1_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string var_string1 = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_var_string1();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.ComplexObjectL410.var_string1"));
        } else
          goto handle_unusual;
        continue;
      // .proto.ComplexObjectL411 complexObjectL411 = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_complexobjectl411(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ComplexObjectL410::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.ComplexObjectL410)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 var_int321 = 1;
  if (this->_internal_var_int321() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_var_int321(), target);
  }

  // int64 var_int641 = 2;
  if (this->_internal_var_int641() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_var_int641(), target);
  }

  // float var_float1 = 3;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_var_float1 = this->_internal_var_float1();
  uint32_t raw_var_float1;
  memcpy(&raw_var_float1, &tmp_var_float1, sizeof(tmp_var_float1));
  if (raw_var_float1 != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(3, this->_internal_var_float1(), target);
  }

  // double var_double1 = 4;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_var_double1 = this->_internal_var_double1();
  uint64_t raw_var_double1;
  memcpy(&raw_var_double1, &tmp_var_double1, sizeof(tmp_var_double1));
  if (raw_var_double1 != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(4, this->_internal_var_double1(), target);
  }

  // bool var_bool1 = 5;
  if (this->_internal_var_bool1() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(5, this->_internal_var_bool1(), target);
  }

  // string var_string1 = 6;
  if (!this->_internal_var_string1().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_var_string1().data(), static_cast<int>(this->_internal_var_string1().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.ComplexObjectL410.var_string1");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_var_string1(), target);
  }

  // .proto.ComplexObjectL411 complexObjectL411 = 7;
  if (this->_internal_has_complexobjectl411()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::complexobjectl411(this),
        _Internal::complexobjectl411(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ComplexObjectL410)
  return target;
}

size_t ComplexObjectL410::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ComplexObjectL410)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string var_string1 = 6;
  if (!this->_internal_var_string1().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_var_string1());
  }

  // .proto.ComplexObjectL411 complexObjectL411 = 7;
  if (this->_internal_has_complexobjectl411()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.complexobjectl411_);
  }

  // int64 var_int641 = 2;
  if (this->_internal_var_int641() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_var_int641());
  }

  // int32 var_int321 = 1;
  if (this->_internal_var_int321() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_var_int321());
  }

  // float var_float1 = 3;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_var_float1 = this->_internal_var_float1();
  uint32_t raw_var_float1;
  memcpy(&raw_var_float1, &tmp_var_float1, sizeof(tmp_var_float1));
  if (raw_var_float1 != 0) {
    total_size += 1 + 4;
  }

  // double var_double1 = 4;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_var_double1 = this->_internal_var_double1();
  uint64_t raw_var_double1;
  memcpy(&raw_var_double1, &tmp_var_double1, sizeof(tmp_var_double1));
  if (raw_var_double1 != 0) {
    total_size += 1 + 8;
  }

  // bool var_bool1 = 5;
  if (this->_internal_var_bool1() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ComplexObjectL410::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ComplexObjectL410::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ComplexObjectL410::GetClassData() const { return &_class_data_; }


void ComplexObjectL410::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ComplexObjectL410*>(&to_msg);
  auto& from = static_cast<const ComplexObjectL410&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.ComplexObjectL410)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_var_string1().empty()) {
    _this->_internal_set_var_string1(from._internal_var_string1());
  }
  if (from._internal_has_complexobjectl411()) {
    _this->_internal_mutable_complexobjectl411()->::proto::ComplexObjectL411::MergeFrom(
        from._internal_complexobjectl411());
  }
  if (from._internal_var_int641() != 0) {
    _this->_internal_set_var_int641(from._internal_var_int641());
  }
  if (from._internal_var_int321() != 0) {
    _this->_internal_set_var_int321(from._internal_var_int321());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_var_float1 = from._internal_var_float1();
  uint32_t raw_var_float1;
  memcpy(&raw_var_float1, &tmp_var_float1, sizeof(tmp_var_float1));
  if (raw_var_float1 != 0) {
    _this->_internal_set_var_float1(from._internal_var_float1());
  }
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_var_double1 = from._internal_var_double1();
  uint64_t raw_var_double1;
  memcpy(&raw_var_double1, &tmp_var_double1, sizeof(tmp_var_double1));
  if (raw_var_double1 != 0) {
    _this->_internal_set_var_double1(from._internal_var_double1());
  }
  if (from._internal_var_bool1() != 0) {
    _this->_internal_set_var_bool1(from._internal_var_bool1());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ComplexObjectL410::CopyFrom(const ComplexObjectL410& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ComplexObjectL410)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ComplexObjectL410::IsInitialized() const {
  return true;
}

void ComplexObjectL410::InternalSwap(ComplexObjectL410* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.var_string1_, lhs_arena,
      &other->_impl_.var_string1_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ComplexObjectL410, _impl_.var_bool1_)
      + sizeof(ComplexObjectL410::_impl_.var_bool1_)
      - PROTOBUF_FIELD_OFFSET(ComplexObjectL410, _impl_.complexobjectl411_)>(
          reinterpret_cast<char*>(&_impl_.complexobjectl411_),
          reinterpret_cast<char*>(&other->_impl_.complexobjectl411_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ComplexObjectL410::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ComplexObjectL4_2eproto_getter, &descriptor_table_ComplexObjectL4_2eproto_once,
      file_level_metadata_ComplexObjectL4_2eproto[10]);
}

// ===================================================================

class ComplexObjectL411::_Internal {
 public:
  static const ::proto::ComplexObjectL412& complexobjectl412(const ComplexObjectL411* msg);
};

const ::proto::ComplexObjectL412&
ComplexObjectL411::_Internal::complexobjectl412(const ComplexObjectL411* msg) {
  return *msg->_impl_.complexobjectl412_;
}
ComplexObjectL411::ComplexObjectL411(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.ComplexObjectL411)
}
ComplexObjectL411::ComplexObjectL411(const ComplexObjectL411& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ComplexObjectL411* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.var_string1_){}
    , decltype(_impl_.complexobjectl412_){nullptr}
    , decltype(_impl_.var_int641_){}
    , decltype(_impl_.var_int321_){}
    , decltype(_impl_.var_float1_){}
    , decltype(_impl_.var_double1_){}
    , decltype(_impl_.var_bool1_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.var_string1_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.var_string1_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_var_string1().empty()) {
    _this->_impl_.var_string1_.Set(from._internal_var_string1(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_complexobjectl412()) {
    _this->_impl_.complexobjectl412_ = new ::proto::ComplexObjectL412(*from._impl_.complexobjectl412_);
  }
  ::memcpy(&_impl_.var_int641_, &from._impl_.var_int641_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.var_bool1_) -
    reinterpret_cast<char*>(&_impl_.var_int641_)) + sizeof(_impl_.var_bool1_));
  // @@protoc_insertion_point(copy_constructor:proto.ComplexObjectL411)
}

inline void ComplexObjectL411::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.var_string1_){}
    , decltype(_impl_.complexobjectl412_){nullptr}
    , decltype(_impl_.var_int641_){int64_t{0}}
    , decltype(_impl_.var_int321_){0}
    , decltype(_impl_.var_float1_){0}
    , decltype(_impl_.var_double1_){0}
    , decltype(_impl_.var_bool1_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.var_string1_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.var_string1_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ComplexObjectL411::~ComplexObjectL411() {
  // @@protoc_insertion_point(destructor:proto.ComplexObjectL411)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ComplexObjectL411::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.var_string1_.Destroy();
  if (this != internal_default_instance()) delete _impl_.complexobjectl412_;
}

void ComplexObjectL411::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ComplexObjectL411::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ComplexObjectL411)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.var_string1_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.complexobjectl412_ != nullptr) {
    delete _impl_.complexobjectl412_;
  }
  _impl_.complexobjectl412_ = nullptr;
  ::memset(&_impl_.var_int641_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.var_bool1_) -
      reinterpret_cast<char*>(&_impl_.var_int641_)) + sizeof(_impl_.var_bool1_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ComplexObjectL411::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 var_int321 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.var_int321_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 var_int641 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.var_int641_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // float var_float1 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 29)) {
          _impl_.var_float1_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // double var_double1 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 33)) {
          _impl_.var_double1_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // bool var_bool1 = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.var_bool1_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string var_string1 = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_var_string1();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.ComplexObjectL411.var_string1"));
        } else
          goto handle_unusual;
        continue;
      // .proto.ComplexObjectL412 complexObjectL412 = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_complexobjectl412(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ComplexObjectL411::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.ComplexObjectL411)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 var_int321 = 1;
  if (this->_internal_var_int321() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_var_int321(), target);
  }

  // int64 var_int641 = 2;
  if (this->_internal_var_int641() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_var_int641(), target);
  }

  // float var_float1 = 3;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_var_float1 = this->_internal_var_float1();
  uint32_t raw_var_float1;
  memcpy(&raw_var_float1, &tmp_var_float1, sizeof(tmp_var_float1));
  if (raw_var_float1 != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(3, this->_internal_var_float1(), target);
  }

  // double var_double1 = 4;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_var_double1 = this->_internal_var_double1();
  uint64_t raw_var_double1;
  memcpy(&raw_var_double1, &tmp_var_double1, sizeof(tmp_var_double1));
  if (raw_var_double1 != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(4, this->_internal_var_double1(), target);
  }

  // bool var_bool1 = 5;
  if (this->_internal_var_bool1() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(5, this->_internal_var_bool1(), target);
  }

  // string var_string1 = 6;
  if (!this->_internal_var_string1().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_var_string1().data(), static_cast<int>(this->_internal_var_string1().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.ComplexObjectL411.var_string1");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_var_string1(), target);
  }

  // .proto.ComplexObjectL412 complexObjectL412 = 7;
  if (this->_internal_has_complexobjectl412()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::complexobjectl412(this),
        _Internal::complexobjectl412(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ComplexObjectL411)
  return target;
}

size_t ComplexObjectL411::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ComplexObjectL411)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string var_string1 = 6;
  if (!this->_internal_var_string1().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_var_string1());
  }

  // .proto.ComplexObjectL412 complexObjectL412 = 7;
  if (this->_internal_has_complexobjectl412()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.complexobjectl412_);
  }

  // int64 var_int641 = 2;
  if (this->_internal_var_int641() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_var_int641());
  }

  // int32 var_int321 = 1;
  if (this->_internal_var_int321() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_var_int321());
  }

  // float var_float1 = 3;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_var_float1 = this->_internal_var_float1();
  uint32_t raw_var_float1;
  memcpy(&raw_var_float1, &tmp_var_float1, sizeof(tmp_var_float1));
  if (raw_var_float1 != 0) {
    total_size += 1 + 4;
  }

  // double var_double1 = 4;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_var_double1 = this->_internal_var_double1();
  uint64_t raw_var_double1;
  memcpy(&raw_var_double1, &tmp_var_double1, sizeof(tmp_var_double1));
  if (raw_var_double1 != 0) {
    total_size += 1 + 8;
  }

  // bool var_bool1 = 5;
  if (this->_internal_var_bool1() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ComplexObjectL411::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ComplexObjectL411::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ComplexObjectL411::GetClassData() const { return &_class_data_; }


void ComplexObjectL411::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ComplexObjectL411*>(&to_msg);
  auto& from = static_cast<const ComplexObjectL411&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.ComplexObjectL411)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_var_string1().empty()) {
    _this->_internal_set_var_string1(from._internal_var_string1());
  }
  if (from._internal_has_complexobjectl412()) {
    _this->_internal_mutable_complexobjectl412()->::proto::ComplexObjectL412::MergeFrom(
        from._internal_complexobjectl412());
  }
  if (from._internal_var_int641() != 0) {
    _this->_internal_set_var_int641(from._internal_var_int641());
  }
  if (from._internal_var_int321() != 0) {
    _this->_internal_set_var_int321(from._internal_var_int321());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_var_float1 = from._internal_var_float1();
  uint32_t raw_var_float1;
  memcpy(&raw_var_float1, &tmp_var_float1, sizeof(tmp_var_float1));
  if (raw_var_float1 != 0) {
    _this->_internal_set_var_float1(from._internal_var_float1());
  }
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_var_double1 = from._internal_var_double1();
  uint64_t raw_var_double1;
  memcpy(&raw_var_double1, &tmp_var_double1, sizeof(tmp_var_double1));
  if (raw_var_double1 != 0) {
    _this->_internal_set_var_double1(from._internal_var_double1());
  }
  if (from._internal_var_bool1() != 0) {
    _this->_internal_set_var_bool1(from._internal_var_bool1());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ComplexObjectL411::CopyFrom(const ComplexObjectL411& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ComplexObjectL411)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ComplexObjectL411::IsInitialized() const {
  return true;
}

void ComplexObjectL411::InternalSwap(ComplexObjectL411* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.var_string1_, lhs_arena,
      &other->_impl_.var_string1_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ComplexObjectL411, _impl_.var_bool1_)
      + sizeof(ComplexObjectL411::_impl_.var_bool1_)
      - PROTOBUF_FIELD_OFFSET(ComplexObjectL411, _impl_.complexobjectl412_)>(
          reinterpret_cast<char*>(&_impl_.complexobjectl412_),
          reinterpret_cast<char*>(&other->_impl_.complexobjectl412_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ComplexObjectL411::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ComplexObjectL4_2eproto_getter, &descriptor_table_ComplexObjectL4_2eproto_once,
      file_level_metadata_ComplexObjectL4_2eproto[11]);
}

// ===================================================================

class ComplexObjectL412::_Internal {
 public:
  static const ::proto::ComplexObjectL413& complexobjectl413(const ComplexObjectL412* msg);
};

const ::proto::ComplexObjectL413&
ComplexObjectL412::_Internal::complexobjectl413(const ComplexObjectL412* msg) {
  return *msg->_impl_.complexobjectl413_;
}
ComplexObjectL412::ComplexObjectL412(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.ComplexObjectL412)
}
ComplexObjectL412::ComplexObjectL412(const ComplexObjectL412& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ComplexObjectL412* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.var_string1_){}
    , decltype(_impl_.complexobjectl413_){nullptr}
    , decltype(_impl_.var_int641_){}
    , decltype(_impl_.var_int321_){}
    , decltype(_impl_.var_float1_){}
    , decltype(_impl_.var_double1_){}
    , decltype(_impl_.var_bool1_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.var_string1_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.var_string1_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_var_string1().empty()) {
    _this->_impl_.var_string1_.Set(from._internal_var_string1(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_complexobjectl413()) {
    _this->_impl_.complexobjectl413_ = new ::proto::ComplexObjectL413(*from._impl_.complexobjectl413_);
  }
  ::memcpy(&_impl_.var_int641_, &from._impl_.var_int641_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.var_bool1_) -
    reinterpret_cast<char*>(&_impl_.var_int641_)) + sizeof(_impl_.var_bool1_));
  // @@protoc_insertion_point(copy_constructor:proto.ComplexObjectL412)
}

inline void ComplexObjectL412::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.var_string1_){}
    , decltype(_impl_.complexobjectl413_){nullptr}
    , decltype(_impl_.var_int641_){int64_t{0}}
    , decltype(_impl_.var_int321_){0}
    , decltype(_impl_.var_float1_){0}
    , decltype(_impl_.var_double1_){0}
    , decltype(_impl_.var_bool1_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.var_string1_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.var_string1_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ComplexObjectL412::~ComplexObjectL412() {
  // @@protoc_insertion_point(destructor:proto.ComplexObjectL412)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ComplexObjectL412::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.var_string1_.Destroy();
  if (this != internal_default_instance()) delete _impl_.complexobjectl413_;
}

void ComplexObjectL412::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ComplexObjectL412::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ComplexObjectL412)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.var_string1_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.complexobjectl413_ != nullptr) {
    delete _impl_.complexobjectl413_;
  }
  _impl_.complexobjectl413_ = nullptr;
  ::memset(&_impl_.var_int641_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.var_bool1_) -
      reinterpret_cast<char*>(&_impl_.var_int641_)) + sizeof(_impl_.var_bool1_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ComplexObjectL412::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 var_int321 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.var_int321_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 var_int641 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.var_int641_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // float var_float1 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 29)) {
          _impl_.var_float1_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // double var_double1 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 33)) {
          _impl_.var_double1_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // bool var_bool1 = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.var_bool1_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string var_string1 = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_var_string1();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.ComplexObjectL412.var_string1"));
        } else
          goto handle_unusual;
        continue;
      // .proto.ComplexObjectL413 complexObjectL413 = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_complexobjectl413(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ComplexObjectL412::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.ComplexObjectL412)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 var_int321 = 1;
  if (this->_internal_var_int321() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_var_int321(), target);
  }

  // int64 var_int641 = 2;
  if (this->_internal_var_int641() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_var_int641(), target);
  }

  // float var_float1 = 3;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_var_float1 = this->_internal_var_float1();
  uint32_t raw_var_float1;
  memcpy(&raw_var_float1, &tmp_var_float1, sizeof(tmp_var_float1));
  if (raw_var_float1 != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(3, this->_internal_var_float1(), target);
  }

  // double var_double1 = 4;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_var_double1 = this->_internal_var_double1();
  uint64_t raw_var_double1;
  memcpy(&raw_var_double1, &tmp_var_double1, sizeof(tmp_var_double1));
  if (raw_var_double1 != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(4, this->_internal_var_double1(), target);
  }

  // bool var_bool1 = 5;
  if (this->_internal_var_bool1() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(5, this->_internal_var_bool1(), target);
  }

  // string var_string1 = 6;
  if (!this->_internal_var_string1().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_var_string1().data(), static_cast<int>(this->_internal_var_string1().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.ComplexObjectL412.var_string1");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_var_string1(), target);
  }

  // .proto.ComplexObjectL413 complexObjectL413 = 7;
  if (this->_internal_has_complexobjectl413()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::complexobjectl413(this),
        _Internal::complexobjectl413(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ComplexObjectL412)
  return target;
}

size_t ComplexObjectL412::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ComplexObjectL412)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string var_string1 = 6;
  if (!this->_internal_var_string1().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_var_string1());
  }

  // .proto.ComplexObjectL413 complexObjectL413 = 7;
  if (this->_internal_has_complexobjectl413()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.complexobjectl413_);
  }

  // int64 var_int641 = 2;
  if (this->_internal_var_int641() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_var_int641());
  }

  // int32 var_int321 = 1;
  if (this->_internal_var_int321() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_var_int321());
  }

  // float var_float1 = 3;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_var_float1 = this->_internal_var_float1();
  uint32_t raw_var_float1;
  memcpy(&raw_var_float1, &tmp_var_float1, sizeof(tmp_var_float1));
  if (raw_var_float1 != 0) {
    total_size += 1 + 4;
  }

  // double var_double1 = 4;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_var_double1 = this->_internal_var_double1();
  uint64_t raw_var_double1;
  memcpy(&raw_var_double1, &tmp_var_double1, sizeof(tmp_var_double1));
  if (raw_var_double1 != 0) {
    total_size += 1 + 8;
  }

  // bool var_bool1 = 5;
  if (this->_internal_var_bool1() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ComplexObjectL412::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ComplexObjectL412::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ComplexObjectL412::GetClassData() const { return &_class_data_; }


void ComplexObjectL412::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ComplexObjectL412*>(&to_msg);
  auto& from = static_cast<const ComplexObjectL412&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.ComplexObjectL412)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_var_string1().empty()) {
    _this->_internal_set_var_string1(from._internal_var_string1());
  }
  if (from._internal_has_complexobjectl413()) {
    _this->_internal_mutable_complexobjectl413()->::proto::ComplexObjectL413::MergeFrom(
        from._internal_complexobjectl413());
  }
  if (from._internal_var_int641() != 0) {
    _this->_internal_set_var_int641(from._internal_var_int641());
  }
  if (from._internal_var_int321() != 0) {
    _this->_internal_set_var_int321(from._internal_var_int321());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_var_float1 = from._internal_var_float1();
  uint32_t raw_var_float1;
  memcpy(&raw_var_float1, &tmp_var_float1, sizeof(tmp_var_float1));
  if (raw_var_float1 != 0) {
    _this->_internal_set_var_float1(from._internal_var_float1());
  }
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_var_double1 = from._internal_var_double1();
  uint64_t raw_var_double1;
  memcpy(&raw_var_double1, &tmp_var_double1, sizeof(tmp_var_double1));
  if (raw_var_double1 != 0) {
    _this->_internal_set_var_double1(from._internal_var_double1());
  }
  if (from._internal_var_bool1() != 0) {
    _this->_internal_set_var_bool1(from._internal_var_bool1());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ComplexObjectL412::CopyFrom(const ComplexObjectL412& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ComplexObjectL412)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ComplexObjectL412::IsInitialized() const {
  return true;
}

void ComplexObjectL412::InternalSwap(ComplexObjectL412* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.var_string1_, lhs_arena,
      &other->_impl_.var_string1_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ComplexObjectL412, _impl_.var_bool1_)
      + sizeof(ComplexObjectL412::_impl_.var_bool1_)
      - PROTOBUF_FIELD_OFFSET(ComplexObjectL412, _impl_.complexobjectl413_)>(
          reinterpret_cast<char*>(&_impl_.complexobjectl413_),
          reinterpret_cast<char*>(&other->_impl_.complexobjectl413_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ComplexObjectL412::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ComplexObjectL4_2eproto_getter, &descriptor_table_ComplexObjectL4_2eproto_once,
      file_level_metadata_ComplexObjectL4_2eproto[12]);
}

// ===================================================================

class ComplexObjectL413::_Internal {
 public:
  static const ::proto::ComplexObjectL414& complexobjectl414(const ComplexObjectL413* msg);
};

const ::proto::ComplexObjectL414&
ComplexObjectL413::_Internal::complexobjectl414(const ComplexObjectL413* msg) {
  return *msg->_impl_.complexobjectl414_;
}
ComplexObjectL413::ComplexObjectL413(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.ComplexObjectL413)
}
ComplexObjectL413::ComplexObjectL413(const ComplexObjectL413& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ComplexObjectL413* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.var_string1_){}
    , decltype(_impl_.complexobjectl414_){nullptr}
    , decltype(_impl_.var_int641_){}
    , decltype(_impl_.var_int321_){}
    , decltype(_impl_.var_float1_){}
    , decltype(_impl_.var_double1_){}
    , decltype(_impl_.var_bool1_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.var_string1_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.var_string1_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_var_string1().empty()) {
    _this->_impl_.var_string1_.Set(from._internal_var_string1(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_complexobjectl414()) {
    _this->_impl_.complexobjectl414_ = new ::proto::ComplexObjectL414(*from._impl_.complexobjectl414_);
  }
  ::memcpy(&_impl_.var_int641_, &from._impl_.var_int641_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.var_bool1_) -
    reinterpret_cast<char*>(&_impl_.var_int641_)) + sizeof(_impl_.var_bool1_));
  // @@protoc_insertion_point(copy_constructor:proto.ComplexObjectL413)
}

inline void ComplexObjectL413::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.var_string1_){}
    , decltype(_impl_.complexobjectl414_){nullptr}
    , decltype(_impl_.var_int641_){int64_t{0}}
    , decltype(_impl_.var_int321_){0}
    , decltype(_impl_.var_float1_){0}
    , decltype(_impl_.var_double1_){0}
    , decltype(_impl_.var_bool1_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.var_string1_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.var_string1_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ComplexObjectL413::~ComplexObjectL413() {
  // @@protoc_insertion_point(destructor:proto.ComplexObjectL413)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ComplexObjectL413::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.var_string1_.Destroy();
  if (this != internal_default_instance()) delete _impl_.complexobjectl414_;
}

void ComplexObjectL413::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ComplexObjectL413::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ComplexObjectL413)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.var_string1_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.complexobjectl414_ != nullptr) {
    delete _impl_.complexobjectl414_;
  }
  _impl_.complexobjectl414_ = nullptr;
  ::memset(&_impl_.var_int641_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.var_bool1_) -
      reinterpret_cast<char*>(&_impl_.var_int641_)) + sizeof(_impl_.var_bool1_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ComplexObjectL413::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 var_int321 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.var_int321_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 var_int641 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.var_int641_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // float var_float1 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 29)) {
          _impl_.var_float1_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // double var_double1 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 33)) {
          _impl_.var_double1_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // bool var_bool1 = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.var_bool1_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string var_string1 = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_var_string1();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.ComplexObjectL413.var_string1"));
        } else
          goto handle_unusual;
        continue;
      // .proto.ComplexObjectL414 complexObjectL414 = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_complexobjectl414(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ComplexObjectL413::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.ComplexObjectL413)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 var_int321 = 1;
  if (this->_internal_var_int321() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_var_int321(), target);
  }

  // int64 var_int641 = 2;
  if (this->_internal_var_int641() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_var_int641(), target);
  }

  // float var_float1 = 3;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_var_float1 = this->_internal_var_float1();
  uint32_t raw_var_float1;
  memcpy(&raw_var_float1, &tmp_var_float1, sizeof(tmp_var_float1));
  if (raw_var_float1 != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(3, this->_internal_var_float1(), target);
  }

  // double var_double1 = 4;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_var_double1 = this->_internal_var_double1();
  uint64_t raw_var_double1;
  memcpy(&raw_var_double1, &tmp_var_double1, sizeof(tmp_var_double1));
  if (raw_var_double1 != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(4, this->_internal_var_double1(), target);
  }

  // bool var_bool1 = 5;
  if (this->_internal_var_bool1() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(5, this->_internal_var_bool1(), target);
  }

  // string var_string1 = 6;
  if (!this->_internal_var_string1().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_var_string1().data(), static_cast<int>(this->_internal_var_string1().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.ComplexObjectL413.var_string1");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_var_string1(), target);
  }

  // .proto.ComplexObjectL414 complexObjectL414 = 7;
  if (this->_internal_has_complexobjectl414()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::complexobjectl414(this),
        _Internal::complexobjectl414(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ComplexObjectL413)
  return target;
}

size_t ComplexObjectL413::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ComplexObjectL413)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string var_string1 = 6;
  if (!this->_internal_var_string1().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_var_string1());
  }

  // .proto.ComplexObjectL414 complexObjectL414 = 7;
  if (this->_internal_has_complexobjectl414()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.complexobjectl414_);
  }

  // int64 var_int641 = 2;
  if (this->_internal_var_int641() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_var_int641());
  }

  // int32 var_int321 = 1;
  if (this->_internal_var_int321() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_var_int321());
  }

  // float var_float1 = 3;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_var_float1 = this->_internal_var_float1();
  uint32_t raw_var_float1;
  memcpy(&raw_var_float1, &tmp_var_float1, sizeof(tmp_var_float1));
  if (raw_var_float1 != 0) {
    total_size += 1 + 4;
  }

  // double var_double1 = 4;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_var_double1 = this->_internal_var_double1();
  uint64_t raw_var_double1;
  memcpy(&raw_var_double1, &tmp_var_double1, sizeof(tmp_var_double1));
  if (raw_var_double1 != 0) {
    total_size += 1 + 8;
  }

  // bool var_bool1 = 5;
  if (this->_internal_var_bool1() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ComplexObjectL413::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ComplexObjectL413::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ComplexObjectL413::GetClassData() const { return &_class_data_; }


void ComplexObjectL413::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ComplexObjectL413*>(&to_msg);
  auto& from = static_cast<const ComplexObjectL413&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.ComplexObjectL413)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_var_string1().empty()) {
    _this->_internal_set_var_string1(from._internal_var_string1());
  }
  if (from._internal_has_complexobjectl414()) {
    _this->_internal_mutable_complexobjectl414()->::proto::ComplexObjectL414::MergeFrom(
        from._internal_complexobjectl414());
  }
  if (from._internal_var_int641() != 0) {
    _this->_internal_set_var_int641(from._internal_var_int641());
  }
  if (from._internal_var_int321() != 0) {
    _this->_internal_set_var_int321(from._internal_var_int321());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_var_float1 = from._internal_var_float1();
  uint32_t raw_var_float1;
  memcpy(&raw_var_float1, &tmp_var_float1, sizeof(tmp_var_float1));
  if (raw_var_float1 != 0) {
    _this->_internal_set_var_float1(from._internal_var_float1());
  }
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_var_double1 = from._internal_var_double1();
  uint64_t raw_var_double1;
  memcpy(&raw_var_double1, &tmp_var_double1, sizeof(tmp_var_double1));
  if (raw_var_double1 != 0) {
    _this->_internal_set_var_double1(from._internal_var_double1());
  }
  if (from._internal_var_bool1() != 0) {
    _this->_internal_set_var_bool1(from._internal_var_bool1());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ComplexObjectL413::CopyFrom(const ComplexObjectL413& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ComplexObjectL413)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ComplexObjectL413::IsInitialized() const {
  return true;
}

void ComplexObjectL413::InternalSwap(ComplexObjectL413* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.var_string1_, lhs_arena,
      &other->_impl_.var_string1_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ComplexObjectL413, _impl_.var_bool1_)
      + sizeof(ComplexObjectL413::_impl_.var_bool1_)
      - PROTOBUF_FIELD_OFFSET(ComplexObjectL413, _impl_.complexobjectl414_)>(
          reinterpret_cast<char*>(&_impl_.complexobjectl414_),
          reinterpret_cast<char*>(&other->_impl_.complexobjectl414_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ComplexObjectL413::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ComplexObjectL4_2eproto_getter, &descriptor_table_ComplexObjectL4_2eproto_once,
      file_level_metadata_ComplexObjectL4_2eproto[13]);
}

// ===================================================================

class ComplexObjectL414::_Internal {
 public:
  static const ::proto::ComplexObjectL415& complexobjectl415(const ComplexObjectL414* msg);
};

const ::proto::ComplexObjectL415&
ComplexObjectL414::_Internal::complexobjectl415(const ComplexObjectL414* msg) {
  return *msg->_impl_.complexobjectl415_;
}
ComplexObjectL414::ComplexObjectL414(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.ComplexObjectL414)
}
ComplexObjectL414::ComplexObjectL414(const ComplexObjectL414& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ComplexObjectL414* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.var_string1_){}
    , decltype(_impl_.complexobjectl415_){nullptr}
    , decltype(_impl_.var_int641_){}
    , decltype(_impl_.var_int321_){}
    , decltype(_impl_.var_float1_){}
    , decltype(_impl_.var_double1_){}
    , decltype(_impl_.var_bool1_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.var_string1_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.var_string1_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_var_string1().empty()) {
    _this->_impl_.var_string1_.Set(from._internal_var_string1(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_complexobjectl415()) {
    _this->_impl_.complexobjectl415_ = new ::proto::ComplexObjectL415(*from._impl_.complexobjectl415_);
  }
  ::memcpy(&_impl_.var_int641_, &from._impl_.var_int641_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.var_bool1_) -
    reinterpret_cast<char*>(&_impl_.var_int641_)) + sizeof(_impl_.var_bool1_));
  // @@protoc_insertion_point(copy_constructor:proto.ComplexObjectL414)
}

inline void ComplexObjectL414::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.var_string1_){}
    , decltype(_impl_.complexobjectl415_){nullptr}
    , decltype(_impl_.var_int641_){int64_t{0}}
    , decltype(_impl_.var_int321_){0}
    , decltype(_impl_.var_float1_){0}
    , decltype(_impl_.var_double1_){0}
    , decltype(_impl_.var_bool1_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.var_string1_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.var_string1_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ComplexObjectL414::~ComplexObjectL414() {
  // @@protoc_insertion_point(destructor:proto.ComplexObjectL414)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ComplexObjectL414::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.var_string1_.Destroy();
  if (this != internal_default_instance()) delete _impl_.complexobjectl415_;
}

void ComplexObjectL414::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ComplexObjectL414::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ComplexObjectL414)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.var_string1_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.complexobjectl415_ != nullptr) {
    delete _impl_.complexobjectl415_;
  }
  _impl_.complexobjectl415_ = nullptr;
  ::memset(&_impl_.var_int641_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.var_bool1_) -
      reinterpret_cast<char*>(&_impl_.var_int641_)) + sizeof(_impl_.var_bool1_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ComplexObjectL414::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 var_int321 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.var_int321_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 var_int641 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.var_int641_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // float var_float1 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 29)) {
          _impl_.var_float1_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // double var_double1 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 33)) {
          _impl_.var_double1_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // bool var_bool1 = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.var_bool1_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string var_string1 = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_var_string1();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.ComplexObjectL414.var_string1"));
        } else
          goto handle_unusual;
        continue;
      // .proto.ComplexObjectL415 complexObjectL415 = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_complexobjectl415(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ComplexObjectL414::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.ComplexObjectL414)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 var_int321 = 1;
  if (this->_internal_var_int321() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_var_int321(), target);
  }

  // int64 var_int641 = 2;
  if (this->_internal_var_int641() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_var_int641(), target);
  }

  // float var_float1 = 3;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_var_float1 = this->_internal_var_float1();
  uint32_t raw_var_float1;
  memcpy(&raw_var_float1, &tmp_var_float1, sizeof(tmp_var_float1));
  if (raw_var_float1 != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(3, this->_internal_var_float1(), target);
  }

  // double var_double1 = 4;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_var_double1 = this->_internal_var_double1();
  uint64_t raw_var_double1;
  memcpy(&raw_var_double1, &tmp_var_double1, sizeof(tmp_var_double1));
  if (raw_var_double1 != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(4, this->_internal_var_double1(), target);
  }

  // bool var_bool1 = 5;
  if (this->_internal_var_bool1() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(5, this->_internal_var_bool1(), target);
  }

  // string var_string1 = 6;
  if (!this->_internal_var_string1().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_var_string1().data(), static_cast<int>(this->_internal_var_string1().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.ComplexObjectL414.var_string1");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_var_string1(), target);
  }

  // .proto.ComplexObjectL415 complexObjectL415 = 7;
  if (this->_internal_has_complexobjectl415()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::complexobjectl415(this),
        _Internal::complexobjectl415(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ComplexObjectL414)
  return target;
}

size_t ComplexObjectL414::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ComplexObjectL414)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string var_string1 = 6;
  if (!this->_internal_var_string1().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_var_string1());
  }

  // .proto.ComplexObjectL415 complexObjectL415 = 7;
  if (this->_internal_has_complexobjectl415()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.complexobjectl415_);
  }

  // int64 var_int641 = 2;
  if (this->_internal_var_int641() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_var_int641());
  }

  // int32 var_int321 = 1;
  if (this->_internal_var_int321() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_var_int321());
  }

  // float var_float1 = 3;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_var_float1 = this->_internal_var_float1();
  uint32_t raw_var_float1;
  memcpy(&raw_var_float1, &tmp_var_float1, sizeof(tmp_var_float1));
  if (raw_var_float1 != 0) {
    total_size += 1 + 4;
  }

  // double var_double1 = 4;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_var_double1 = this->_internal_var_double1();
  uint64_t raw_var_double1;
  memcpy(&raw_var_double1, &tmp_var_double1, sizeof(tmp_var_double1));
  if (raw_var_double1 != 0) {
    total_size += 1 + 8;
  }

  // bool var_bool1 = 5;
  if (this->_internal_var_bool1() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ComplexObjectL414::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ComplexObjectL414::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ComplexObjectL414::GetClassData() const { return &_class_data_; }


void ComplexObjectL414::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ComplexObjectL414*>(&to_msg);
  auto& from = static_cast<const ComplexObjectL414&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.ComplexObjectL414)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_var_string1().empty()) {
    _this->_internal_set_var_string1(from._internal_var_string1());
  }
  if (from._internal_has_complexobjectl415()) {
    _this->_internal_mutable_complexobjectl415()->::proto::ComplexObjectL415::MergeFrom(
        from._internal_complexobjectl415());
  }
  if (from._internal_var_int641() != 0) {
    _this->_internal_set_var_int641(from._internal_var_int641());
  }
  if (from._internal_var_int321() != 0) {
    _this->_internal_set_var_int321(from._internal_var_int321());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_var_float1 = from._internal_var_float1();
  uint32_t raw_var_float1;
  memcpy(&raw_var_float1, &tmp_var_float1, sizeof(tmp_var_float1));
  if (raw_var_float1 != 0) {
    _this->_internal_set_var_float1(from._internal_var_float1());
  }
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_var_double1 = from._internal_var_double1();
  uint64_t raw_var_double1;
  memcpy(&raw_var_double1, &tmp_var_double1, sizeof(tmp_var_double1));
  if (raw_var_double1 != 0) {
    _this->_internal_set_var_double1(from._internal_var_double1());
  }
  if (from._internal_var_bool1() != 0) {
    _this->_internal_set_var_bool1(from._internal_var_bool1());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ComplexObjectL414::CopyFrom(const ComplexObjectL414& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ComplexObjectL414)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ComplexObjectL414::IsInitialized() const {
  return true;
}

void ComplexObjectL414::InternalSwap(ComplexObjectL414* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.var_string1_, lhs_arena,
      &other->_impl_.var_string1_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ComplexObjectL414, _impl_.var_bool1_)
      + sizeof(ComplexObjectL414::_impl_.var_bool1_)
      - PROTOBUF_FIELD_OFFSET(ComplexObjectL414, _impl_.complexobjectl415_)>(
          reinterpret_cast<char*>(&_impl_.complexobjectl415_),
          reinterpret_cast<char*>(&other->_impl_.complexobjectl415_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ComplexObjectL414::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ComplexObjectL4_2eproto_getter, &descriptor_table_ComplexObjectL4_2eproto_once,
      file_level_metadata_ComplexObjectL4_2eproto[14]);
}

// ===================================================================

class ComplexObjectL415::_Internal {
 public:
};

ComplexObjectL415::ComplexObjectL415(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.ComplexObjectL415)
}
ComplexObjectL415::ComplexObjectL415(const ComplexObjectL415& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ComplexObjectL415* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.var_string1_){}
    , decltype(_impl_.var_int641_){}
    , decltype(_impl_.var_int321_){}
    , decltype(_impl_.var_float1_){}
    , decltype(_impl_.var_double1_){}
    , decltype(_impl_.var_bool1_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.var_string1_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.var_string1_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_var_string1().empty()) {
    _this->_impl_.var_string1_.Set(from._internal_var_string1(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.var_int641_, &from._impl_.var_int641_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.var_bool1_) -
    reinterpret_cast<char*>(&_impl_.var_int641_)) + sizeof(_impl_.var_bool1_));
  // @@protoc_insertion_point(copy_constructor:proto.ComplexObjectL415)
}

inline void ComplexObjectL415::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.var_string1_){}
    , decltype(_impl_.var_int641_){int64_t{0}}
    , decltype(_impl_.var_int321_){0}
    , decltype(_impl_.var_float1_){0}
    , decltype(_impl_.var_double1_){0}
    , decltype(_impl_.var_bool1_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.var_string1_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.var_string1_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ComplexObjectL415::~ComplexObjectL415() {
  // @@protoc_insertion_point(destructor:proto.ComplexObjectL415)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ComplexObjectL415::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.var_string1_.Destroy();
}

void ComplexObjectL415::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ComplexObjectL415::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ComplexObjectL415)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.var_string1_.ClearToEmpty();
  ::memset(&_impl_.var_int641_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.var_bool1_) -
      reinterpret_cast<char*>(&_impl_.var_int641_)) + sizeof(_impl_.var_bool1_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ComplexObjectL415::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 var_int321 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.var_int321_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 var_int641 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.var_int641_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // float var_float1 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 29)) {
          _impl_.var_float1_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // double var_double1 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 33)) {
          _impl_.var_double1_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // bool var_bool1 = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.var_bool1_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string var_string1 = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_var_string1();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.ComplexObjectL415.var_string1"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ComplexObjectL415::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.ComplexObjectL415)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 var_int321 = 1;
  if (this->_internal_var_int321() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_var_int321(), target);
  }

  // int64 var_int641 = 2;
  if (this->_internal_var_int641() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_var_int641(), target);
  }

  // float var_float1 = 3;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_var_float1 = this->_internal_var_float1();
  uint32_t raw_var_float1;
  memcpy(&raw_var_float1, &tmp_var_float1, sizeof(tmp_var_float1));
  if (raw_var_float1 != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(3, this->_internal_var_float1(), target);
  }

  // double var_double1 = 4;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_var_double1 = this->_internal_var_double1();
  uint64_t raw_var_double1;
  memcpy(&raw_var_double1, &tmp_var_double1, sizeof(tmp_var_double1));
  if (raw_var_double1 != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(4, this->_internal_var_double1(), target);
  }

  // bool var_bool1 = 5;
  if (this->_internal_var_bool1() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(5, this->_internal_var_bool1(), target);
  }

  // string var_string1 = 6;
  if (!this->_internal_var_string1().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_var_string1().data(), static_cast<int>(this->_internal_var_string1().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.ComplexObjectL415.var_string1");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_var_string1(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ComplexObjectL415)
  return target;
}

size_t ComplexObjectL415::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ComplexObjectL415)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string var_string1 = 6;
  if (!this->_internal_var_string1().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_var_string1());
  }

  // int64 var_int641 = 2;
  if (this->_internal_var_int641() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_var_int641());
  }

  // int32 var_int321 = 1;
  if (this->_internal_var_int321() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_var_int321());
  }

  // float var_float1 = 3;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_var_float1 = this->_internal_var_float1();
  uint32_t raw_var_float1;
  memcpy(&raw_var_float1, &tmp_var_float1, sizeof(tmp_var_float1));
  if (raw_var_float1 != 0) {
    total_size += 1 + 4;
  }

  // double var_double1 = 4;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_var_double1 = this->_internal_var_double1();
  uint64_t raw_var_double1;
  memcpy(&raw_var_double1, &tmp_var_double1, sizeof(tmp_var_double1));
  if (raw_var_double1 != 0) {
    total_size += 1 + 8;
  }

  // bool var_bool1 = 5;
  if (this->_internal_var_bool1() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ComplexObjectL415::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ComplexObjectL415::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ComplexObjectL415::GetClassData() const { return &_class_data_; }


void ComplexObjectL415::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ComplexObjectL415*>(&to_msg);
  auto& from = static_cast<const ComplexObjectL415&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.ComplexObjectL415)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_var_string1().empty()) {
    _this->_internal_set_var_string1(from._internal_var_string1());
  }
  if (from._internal_var_int641() != 0) {
    _this->_internal_set_var_int641(from._internal_var_int641());
  }
  if (from._internal_var_int321() != 0) {
    _this->_internal_set_var_int321(from._internal_var_int321());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_var_float1 = from._internal_var_float1();
  uint32_t raw_var_float1;
  memcpy(&raw_var_float1, &tmp_var_float1, sizeof(tmp_var_float1));
  if (raw_var_float1 != 0) {
    _this->_internal_set_var_float1(from._internal_var_float1());
  }
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_var_double1 = from._internal_var_double1();
  uint64_t raw_var_double1;
  memcpy(&raw_var_double1, &tmp_var_double1, sizeof(tmp_var_double1));
  if (raw_var_double1 != 0) {
    _this->_internal_set_var_double1(from._internal_var_double1());
  }
  if (from._internal_var_bool1() != 0) {
    _this->_internal_set_var_bool1(from._internal_var_bool1());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ComplexObjectL415::CopyFrom(const ComplexObjectL415& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ComplexObjectL415)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ComplexObjectL415::IsInitialized() const {
  return true;
}

void ComplexObjectL415::InternalSwap(ComplexObjectL415* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.var_string1_, lhs_arena,
      &other->_impl_.var_string1_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ComplexObjectL415, _impl_.var_bool1_)
      + sizeof(ComplexObjectL415::_impl_.var_bool1_)
      - PROTOBUF_FIELD_OFFSET(ComplexObjectL415, _impl_.var_int641_)>(
          reinterpret_cast<char*>(&_impl_.var_int641_),
          reinterpret_cast<char*>(&other->_impl_.var_int641_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ComplexObjectL415::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ComplexObjectL4_2eproto_getter, &descriptor_table_ComplexObjectL4_2eproto_once,
      file_level_metadata_ComplexObjectL4_2eproto[15]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::proto::ComplexObjectL4*
Arena::CreateMaybeMessage< ::proto::ComplexObjectL4 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::ComplexObjectL4 >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::ComplexObjectL41*
Arena::CreateMaybeMessage< ::proto::ComplexObjectL41 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::ComplexObjectL41 >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::ComplexObjectL42*
Arena::CreateMaybeMessage< ::proto::ComplexObjectL42 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::ComplexObjectL42 >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::ComplexObjectL43*
Arena::CreateMaybeMessage< ::proto::ComplexObjectL43 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::ComplexObjectL43 >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::ComplexObjectL44*
Arena::CreateMaybeMessage< ::proto::ComplexObjectL44 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::ComplexObjectL44 >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::ComplexObjectL45*
Arena::CreateMaybeMessage< ::proto::ComplexObjectL45 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::ComplexObjectL45 >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::ComplexObjectL46*
Arena::CreateMaybeMessage< ::proto::ComplexObjectL46 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::ComplexObjectL46 >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::ComplexObjectL47*
Arena::CreateMaybeMessage< ::proto::ComplexObjectL47 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::ComplexObjectL47 >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::ComplexObjectL48*
Arena::CreateMaybeMessage< ::proto::ComplexObjectL48 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::ComplexObjectL48 >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::ComplexObjectL49*
Arena::CreateMaybeMessage< ::proto::ComplexObjectL49 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::ComplexObjectL49 >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::ComplexObjectL410*
Arena::CreateMaybeMessage< ::proto::ComplexObjectL410 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::ComplexObjectL410 >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::ComplexObjectL411*
Arena::CreateMaybeMessage< ::proto::ComplexObjectL411 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::ComplexObjectL411 >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::ComplexObjectL412*
Arena::CreateMaybeMessage< ::proto::ComplexObjectL412 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::ComplexObjectL412 >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::ComplexObjectL413*
Arena::CreateMaybeMessage< ::proto::ComplexObjectL413 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::ComplexObjectL413 >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::ComplexObjectL414*
Arena::CreateMaybeMessage< ::proto::ComplexObjectL414 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::ComplexObjectL414 >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::ComplexObjectL415*
Arena::CreateMaybeMessage< ::proto::ComplexObjectL415 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::ComplexObjectL415 >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
