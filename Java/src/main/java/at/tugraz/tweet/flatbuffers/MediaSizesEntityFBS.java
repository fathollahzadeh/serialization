// automatically generated by the FlatBuffers compiler, do not modify

package at.tugraz.tweet.flatbuffers;

import java.nio.*;
import java.lang.*;

import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class MediaSizesEntityFBS extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_2_0_0(); }
  public static MediaSizesEntityFBS getRootAsMediaSizesEntityFBS(ByteBuffer _bb) { return getRootAsMediaSizesEntityFBS(_bb, new MediaSizesEntityFBS()); }
  public static MediaSizesEntityFBS getRootAsMediaSizesEntityFBS(ByteBuffer _bb, MediaSizesEntityFBS obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public MediaSizesEntityFBS __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public SizeEntityFBS thumb() { return thumb(new SizeEntityFBS()); }
  public SizeEntityFBS thumb(SizeEntityFBS obj) { int o = __offset(4); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }
  public SizeEntityFBS large() { return large(new SizeEntityFBS()); }
  public SizeEntityFBS large(SizeEntityFBS obj) { int o = __offset(6); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }
  public SizeEntityFBS medium() { return medium(new SizeEntityFBS()); }
  public SizeEntityFBS medium(SizeEntityFBS obj) { int o = __offset(8); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }
  public SizeEntityFBS small() { return small(new SizeEntityFBS()); }
  public SizeEntityFBS small(SizeEntityFBS obj) { int o = __offset(10); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }

  public static int createMediaSizesEntityFBS(FlatBufferBuilder builder,
      int thumbOffset,
      int largeOffset,
      int mediumOffset,
      int smallOffset) {
    builder.startTable(4);
    MediaSizesEntityFBS.addSmall(builder, smallOffset);
    MediaSizesEntityFBS.addMedium(builder, mediumOffset);
    MediaSizesEntityFBS.addLarge(builder, largeOffset);
    MediaSizesEntityFBS.addThumb(builder, thumbOffset);
    return MediaSizesEntityFBS.endMediaSizesEntityFBS(builder);
  }

  public static void startMediaSizesEntityFBS(FlatBufferBuilder builder) { builder.startTable(4); }
  public static void addThumb(FlatBufferBuilder builder, int thumbOffset) { builder.addOffset(0, thumbOffset, 0); }
  public static void addLarge(FlatBufferBuilder builder, int largeOffset) { builder.addOffset(1, largeOffset, 0); }
  public static void addMedium(FlatBufferBuilder builder, int mediumOffset) { builder.addOffset(2, mediumOffset, 0); }
  public static void addSmall(FlatBufferBuilder builder, int smallOffset) { builder.addOffset(3, smallOffset, 0); }
  public static int endMediaSizesEntityFBS(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }
  public static void finishMediaSizesEntityFBSBuffer(FlatBufferBuilder builder, int offset) { builder.finish(offset); }
  public static void finishSizePrefixedMediaSizesEntityFBSBuffer(FlatBufferBuilder builder, int offset) { builder.finishSizePrefixed(offset); }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public MediaSizesEntityFBS get(int j) { return get(new MediaSizesEntityFBS(), j); }
    public MediaSizesEntityFBS get(MediaSizesEntityFBS obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

