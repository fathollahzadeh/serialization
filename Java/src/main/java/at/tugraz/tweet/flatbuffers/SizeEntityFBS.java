// automatically generated by the FlatBuffers compiler, do not modify

package at.tugraz.tweet.flatbuffers;

import java.nio.*;
import java.lang.*;

import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class SizeEntityFBS extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_1_12_0(); }
  public static SizeEntityFBS getRootAsSizeEntityFBS(ByteBuffer _bb) { return getRootAsSizeEntityFBS(_bb, new SizeEntityFBS()); }
  public static SizeEntityFBS getRootAsSizeEntityFBS(ByteBuffer _bb, SizeEntityFBS obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public SizeEntityFBS __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int width() { int o = __offset(4); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public boolean mutateWidth(int width) { int o = __offset(4); if (o != 0) { bb.putInt(o + bb_pos, width); return true; } else { return false; } }
  public int height() { int o = __offset(6); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public boolean mutateHeight(int height) { int o = __offset(6); if (o != 0) { bb.putInt(o + bb_pos, height); return true; } else { return false; } }
  public String resize() { int o = __offset(8); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer resizeAsByteBuffer() { return __vector_as_bytebuffer(8, 1); }
  public ByteBuffer resizeInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 8, 1); }

  public static int createSizeEntityFBS(FlatBufferBuilder builder,
      int width,
      int height,
      int resizeOffset) {
    builder.startTable(3);
    SizeEntityFBS.addResize(builder, resizeOffset);
    SizeEntityFBS.addHeight(builder, height);
    SizeEntityFBS.addWidth(builder, width);
    return SizeEntityFBS.endSizeEntityFBS(builder);
  }

  public static void startSizeEntityFBS(FlatBufferBuilder builder) { builder.startTable(3); }
  public static void addWidth(FlatBufferBuilder builder, int width) { builder.addInt(0, width, 0); }
  public static void addHeight(FlatBufferBuilder builder, int height) { builder.addInt(1, height, 0); }
  public static void addResize(FlatBufferBuilder builder, int resizeOffset) { builder.addOffset(2, resizeOffset, 0); }
  public static int endSizeEntityFBS(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }
  public static void finishSizeEntityFBSBuffer(FlatBufferBuilder builder, int offset) { builder.finish(offset); }
  public static void finishSizePrefixedSizeEntityFBSBuffer(FlatBufferBuilder builder, int offset) { builder.finishSizePrefixed(offset); }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public SizeEntityFBS get(int j) { return get(new SizeEntityFBS(), j); }
    public SizeEntityFBS get(SizeEntityFBS obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

